Script started on 2020-11-12 10:59:22-05:00 [TERM="xterm" TTY="/dev/pts/4" COLUMNS="134" LINES="71"]
rgeary1@remote01:~/i220a/submit/lab11$ exit

Script done on 2020-11-12 11:03:49-05:00 [COMMAND_EXIT_CODE="0"]
Script started on 2020-11-12 12:38:41-05:00 [TERM="xterm" TTY="/dev/pts/1" COLUMNS="134" LINES="71"]
rgeary1@remote01:~/i220a/submit/lab11$ ls
exercises  lab11.LOG
rgeary1@remote01:~/i220a/submit/lab11$ cd exercises/
rgeary1@remote01:~/i220a/submit/lab11/exercises$ ls -l
total 4
drwxr-x--- 2 rgeary1 rgeary1   71 Nov  9 21:07 coverage
drwxr-x--- 2 rgeary1 rgeary1 4096 Nov  9 21:07 int-search
drwxr-x--- 2 rgeary1 rgeary1  141 Nov  9 21:07 matmul-cache
drwxr-x--- 2 rgeary1 rgeary1  109 Nov  9 21:07 parity
rgeary1@remote01:~/i220a/submit/lab11/exercises$ tiem [K[K[Kme ls ~/cs220/labs/lab11/exercises/[K
coverage  int-search  matmul-cache  parity

real	0m0.005s
user	0m0.002s
sys	0m0.000s
rgeary1@remote01:~/i220a/submit/lab11/exercises$ time sleep 5

real	0m5.004s
user	0m0.002s
sys	0m0.000s
rgeary1@remote01:~/i220a/submit/lab11/exercises$ time wc -l `find /etx [K[Kc -type f 2>/dev/null` 2>/dev/nu;ll[K[K[Kll |tai[K[K[K tail
      21 /etc/xattr.conf
      23 /etc/sysfs.conf
      25 /etc/e2scrub.conf
       0 /etc/netgroup
      98 /etc/rsyslog-haproxy.conf
      92 /etc/rsyslog-normal.conf
       1 /etc/login.warn
      45 /etc/ethertypes
      14 /etc/xinetd.conf
  254458 total

real	0m1.492s
user	0m0.061s
sys	0m0.302s
rgeary1@remote01:~/i220a/submit/lab11/exercises$ time wc -l `find /etc -type f 2>/dev/null` 2>/dev/null | tail\[K
      21 /etc/xattr.conf
      23 /etc/sysfs.conf
      25 /etc/e2scrub.conf
       0 /etc/netgroup
      98 /etc/rsyslog-haproxy.conf
      92 /etc/rsyslog-normal.conf
       1 /etc/login.warn
      45 /etc/ethertypes
      14 /etc/xinetd.conf
  254458 total

real	0m0.994s
user	0m0.058s
sys	0m0.173s
rgeary1@remote01:~/i220a/submit/lab11/exercises$ time make -f cd ../
exercises/ lab11.LOG  
rgeary1@remote01:~/i220a/submit/lab11/exercises$ time make -f cd ../../
lab1/     lab11/    lab3/     lab5/     lab7/     lab9/     prj2-sol/ 
lab10/    lab2/     lab4/     lab6/     lab8/     prj1-sol/ prj3-sol/ 
rgeary1@remote01:~/i220a/submit/lab11/exercises$ time make -f cd ../../lab3/
exercises/ lab3.LOG   
rgeary1@remote01:~/i220a/submit/lab11/exercises$ time make -f cd ../../lab3/cd[K[Kexercises/
bin-c.log   cat.log     dir/        .gitignore  ls.log      t1.c        T1.s        v1.s        v.c         x.c         
rgeary1@remote01:~/i220a/submit/lab11/exercises$ time make -f cd ../../lab3/exercises/
bin-c.log   cat.log     dir/        .gitignore  ls.log      t1.c        T1.s        v1.s        v.c         x.c         
rgeary1@remote01:~/i220a/submit/lab11/exercises$ time make -f cd ../../lab3/exercises/[K[K[K[K[K[K[K[K[K[K[K[K4/
exercises/ lab4.LOG   
rgeary1@remote01:~/i220a/submit/lab11/exercises$ time make -f cd ../../lab4/exercises/
1-pointers/      2-in-pointers/   3-bad-types/     4-cast-types/    5-void-pointers/ 6-in-voids/      Makefile
rgeary1@remote01:~/i220a/submit/lab11/exercises$ time make -f cd ../../lab4/exercises/Makefile 
make: cd: No such file or directory
make: *** No rule to make target 'cd'.  Stop.

real	0m0.007s
user	0m0.000s
sys	0m0.003s
rgeary1@remote01:~/i220a/submit/lab11/exercises$ time make -f cd ../../lab4/exercises/Makefile [1P[1P[1P
make: Nothing to be done for 'all'.

real	0m0.014s
user	0m0.000s
sys	0m0.003s
rgeary1@remote01:~/i220a/submit/lab11/exercises$ time seq 0 1000 |[K> seq.f[Kserq[Ke[K[Kq

real	0m0.010s
user	0m0.001s
sys	0m0.002s
rgeary1@remote01:~/i220a/submit/lab11/exercises$ make vi m[K[K[K[K[K[K[K[K[Ktime vim seq.seq 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;71r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[71;1H"seq.seq" 1001L, 3895C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69[71;117H1,1[11CTop[1;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69[71;117H1,1[11CTop"seq.seq" 1001L, 3895C[1;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H70
71
72[71;1H[K[71;117H9,1[12C0%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H73
74
75[71;117H[K[71;117H12,1[11C0%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H76
77
78[71;117H[K[71;117H15,1[11C0%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H79
80
81[71;117H[K[71;117H18,1[11C1%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H82
83
84[71;117H[K[71;117H21,1[11C1%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H85
86
87[71;117H[K[71;117H24,1[11C1%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H88
89
90[71;117H[K[71;117H27,1[11C2%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H91
92
93[71;117H[K[71;117H30,1[11C2%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H94
95
96[71;117H[K[71;117H33,1[11C2%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H97
98
99[71;117H[K[71;117H36,1[11C3%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H100
101
102[71;117H[K[71;117H39,1[11C3%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H103
104
105[71;117H[K[71;117H42,1[11C3%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H106
107
108[71;117H[K[71;117H45,1[11C4%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H109
110
111[71;117H[K[71;117H48,1[11C4%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H112
113
114[71;117H[K[71;117H51,1[11C4%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H115
116
117[71;117H[K[71;117H54,1[11C5%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H118
119
120[71;117H[K[71;117H57,1[11C5%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H121
122
123[71;117H[K[71;117H60,1[11C5%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H124
125
126[71;117H[K[71;117H63,1[11C6%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H127
128
129[71;117H[K[71;117H66,1[11C6%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H130
131
132[71;117H[K[71;117H69,1[11C6%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H133
134
135[71;117H[K[71;117H72,1[11C7%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H136
137
138[71;117H[K[71;117H75,1[11C7%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H139
140
141[71;117H[K[71;117H78,1[11C7%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H142
143
144[71;117H[K[71;117H81,1[11C8%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H145
146
147[71;117H[K[71;117H84,1[11C8%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H148
149
150[71;117H[K[71;117H87,1[11C8%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H151
152
153[71;117H[K[71;117H90,1[11C9%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H154
155
156[71;117H[K[71;117H93,1[11C9%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H157
158
159[71;117H[K[71;117H96,1[11C9%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H160
161
162[71;117H[K[71;117H99,1[11C9%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H163
164
165[71;117H[K[71;117H102,1[9C10%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H166
167
168[71;117H[K[71;117H105,1[9C10%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H169
170
171[71;117H[K[71;117H108,1[9C10%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H172
173
174[71;117H[K[71;117H111,1[9C11%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H175
176
177[71;117H[K[71;117H114,1[9C11%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H178
179
180[71;117H[K[71;117H117,1[9C11%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H181
182
183[71;117H[K[71;117H120,1[9C12%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H184
185
186[71;117H[K[71;117H123,1[9C12%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H187
188
189[71;117H[K[71;117H126,1[9C12%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H190
191
192[71;117H[K[71;117H129,1[9C13%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H193
194
195[71;117H[K[71;117H132,1[9C13%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H196
197
198[71;117H[K[71;117H135,1[9C13%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H199
200
201[71;117H[K[71;117H138,1[9C14%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H202
203
204[71;117H[K[71;117H141,1[9C14%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H205
206
207[71;117H[K[71;117H144,1[9C14%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H208
209
210[71;117H[K[71;117H147,1[9C15%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H211
212
213[71;117H[K[71;117H150,1[9C15%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H214
215
216[71;117H[K[71;117H153,1[9C15%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H217
218
219[71;117H[K[71;117H156,1[9C16%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H220
221
222[71;117H[K[71;117H159,1[9C16%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H223
224
225[71;117H[K[71;117H162,1[9C16%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H226
227
228[71;117H[K[71;117H165,1[9C17%[6;1H[?25h[?25l[71;107H:[6;1H[71;107H[K[71;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"seq.seq" 1001L, 3895C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0t
real	0m6.468s
user	0m0.056s
sys	0m0.019s
rgeary1@remote01:~/i220a/submit/lab11/exercises$ cd[K[Kcd parity/
rgeary1@remote01:~/i220a/submit/lab11/exercises/parity$ ls -;l[K[Kl
total 16
-rw-r----- 1 rgeary1 rgeary1 480 Nov  9 21:07 main.c
-rw-r----- 1 rgeary1 rgeary1 185 Nov  9 21:07 Makefile
-rw-r----- 1 rgeary1 rgeary1 485 Nov  9 21:07 parity-c.c
-rw-r----- 1 rgeary1 rgeary1 445 Nov  9 21:07 parity-s.c
rgeary1@remote01:~/i220a/submit/lab11/exercises/parity$ make
cc -g -Wall -std=c11 -O1   -c -o parity-c.o parity-c.c
cc -g -Wall -std=c11 -O1   -c -o main.o main.c
cc   parity-c.o main.o   -o parity-c
cc -g -Wall -std=c11 -O1   -c -o parity-s.o parity-s.c
cc   parity-s.o main.o   -o parity-s
rgeary1@remote01:~/i220a/submit/lab11/exercises/parity$ ./parity-cx[K -d 10
67: 0
c6: 1
69: 1
73: 0
51: 0
ff: 1
4a: 0
ec: 0
29: 0
cd: 0
3
rgeary1@remote01:~/i220a/submit/lab11/exercises/parity$ ./parity-c -d 10[C[1P[1@s
67: 0
c6: 1
69: 1
73: 0
51: 0
ff: 1
4a: 0
ec: 0
29: 0
cd: 0
3
rgeary1@remote01:~/i220a/submit/lab11/exercises/parity$ ./parity-s -d 10c[C[C[C[C[C[C[1@t[1@i[1@m[1@e[1@ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P 10[1P 10[1P10[C[C[C00000000
499975140

real	0m34.244s
user	0m34.237s
sys	0m0.000s
rgeary1@remote01:~/i220a/submit/lab11/exercises/parity$ time ./parity-c 1000000000[C[1P 1000000000s 1000000000
500000976

real	0m16.623s
user	0m16.617s
sys	0m0.000s
rgeary1@remote01:~/i220a/submit/lab11/exercises/parity$ cd ../matmul-cache/
rgeary1@remote01:~/i220a/submit/lab11/exercises/matmul-cache$ vim transpose-matmul.c 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;71r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[71;1H"transpose-matmul.c" 36L, 779C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"matmul.h"[m

[35m#include [m[31m<errno.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m
[35m#include [m[31m<string.h>[m

[34m/** Fill in matrix t[n][n] as the transpose of matrix a[n][n].  That is,
 *  for all i, j set t[i][j] to a[j][i].
 */[m
[32mstatic[m [32mvoid[m
matrix_transpose([32mint[m n, [32mdouble[m a[][n], [32mdouble[m t[][n])
{
  [34m//@[m[30m[43mTODO[m[34m add your code here[m
}


[32mvoid[m
matrix_multiply([32mint[m n, [32mdouble[m a[][n], [32mdouble[m b[][n], [32mdouble[m c[][n])
{
  [32mdouble[m (*tmp)[n] = malloc([33msizeof[m([32mdouble[m[n][n]));
  [33mif[m (!tmp) {
    fprintf([31mstderr[m, [31m"could not malloc transpose matrix: [m[35m%s\n[m[31m"[m,[24;13Hstrerror(errno));
    exit([31m1[m);
  }
  matrix_transpose(n, b, tmp);
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    [33mfor[m ([32mint[m j = [31m0[m; j < n; j++) {[30;7Hc[i][j] = [31m0[m;[31;7H[33mfor[m ([32mint[m k = [31m0[m; k < n; k++) {[32;9Hc[i][j] += a[i][k]*tmp[j][k];[33;7H}
    }
  }
}
[1m[34m~                                                                                                                                     [38;1H~                                                                                                                                     [39;1H~                                                                                                                                     [40;1H~                                                                                                                                     [41;1H~                                                                                                                                     [42;1H~                                                                                                                                     [43;1H~                                                                                                                                     [44;1H~                                                                                                                                     [45;1H~                                                                                                                                     [46;1H~                                                                                                                                     [47;1H~                                                                                                                                     [48;1H~                                                                                                                                     [49;1H~                                                                                                                                     [50;1H~                                                                                                                                     [51;1H~                                                                                                                                     [52;1H~                                                                                                                                     [53;1H~                                                                                                                                     [54;1H~                                                                                                                                     [55;1H~                                                                                                                                     [56;1H~                                                                                                                                     [57;1H~                                                                                                                                     [58;1H~                                                                                                                                     [59;1H~                                                                                                                                     [60;1H~                                                                                                                                     [61;1H~                                                                                                                                     [62;1H~                                                                                                                                     [63;1H~                                                                                                                                     [64;1H~                                                                                                                                     [65;1H~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H1,1[11CAll[1;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[1m[34m#include [m[1m[35m"matmul.h"[m

[1m[34m#include [m[1m[35m<errno.h>[m
[1m[34m#include [m[1m[35m<stdio.h>[m
[1m[34m#include [m[1m[35m<stdlib.h>[m
[1m[34m#include [m[1m[35m<string.h>[m

[1m[36m/** Fill in matrix t[n][n] as the transpose of matrix a[n][n].  That is,
 *  for all i, j set t[i][j] to a[j][i].
 */[m
[1m[32mstatic[m [1m[32mvoid[m
matrix_transpose([1m[32mint[m n, [1m[32mdouble[m a[][n], [1m[32mdouble[m t[][n])
{
  [1m[36m//@[m[30m[43mTODO[m[1m[36m add your code here[m
}


[1m[32mvoid[m
matrix_multiply([1m[32mint[m n, [1m[32mdouble[m a[][n], [1m[32mdouble[m b[][n], [1m[32mdouble[m c[][n])
{
  [1m[32mdouble[m (*tmp)[n] = malloc([1m[33msizeof[m([1m[32mdouble[m[n][n]));
  [1m[33mif[m (!tmp) {
    fprintf([1m[35mstderr[m, [1m[35m"could not malloc transpose matrix: [m[1m[31m%s\n[m[1m[35m"[m,[24;13Hstrerror(errno));
    exit([1m[35m1[m);
  }
  matrix_transpose(n, b, tmp);
  [1m[33mfor[m ([1m[32mint[m i = [1m[35m0[m; i < n; i++) {
    [1m[33mfor[m ([1m[32mint[m j = [1m[35m0[m; j < n; j++) {[30;7Hc[i][j] = [1m[35m0[m;[31;7H[1m[33mfor[m ([1m[32mint[m k = [1m[35m0[m; k < n; k++) {[32;9Hc[i][j] += a[i][k]*tmp[j][k];[33;7H}
    }
  }
}
[1m[34m~                                                                                                                                     [38;1H~                                                                                                                                     [39;1H~                                                                                                                                     [40;1H~                                                                                                                                     [41;1H~                                                                                                                                     [42;1H~                                                                                                                                     [43;1H~                                                                                                                                     [44;1H~                                                                                                                                     [45;1H~                                                                                                                                     [46;1H~                                                                                                                                     [47;1H~                                                                                                                                     [48;1H~                                                                                                                                     [49;1H~                                                                                                                                     [50;1H~                                                                                                                                     [51;1H~                                                                                                                                     [52;1H~                                                                                                                                     [53;1H~                                                                                                                                     [54;1H~                                                                                                                                     [55;1H~                                                                                                                                     [56;1H~                                                                                                                                     [57;1H~                                                                                                                                     [58;1H~                                                                                                                                     [59;1H~                                                                                                                                     [60;1H~                                                                                                                                     [61;1H~                                                                                                                                     [62;1H~                                                                                                                                     [63;1H~                                                                                                                                     [64;1H~                                                                                                                                     [65;1H~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H1,1[11CAll"transpose-matmul.c" 36L, 779C[1;1H[?25h[?25l[71;118H4,28[14;28H[?25h[?25l[71;107Hi[14;28H[71;107H [14;28H[71;1H[1m-- INSERT --[m[71;13H[K[71;117H14,28[9CAll[14;28H[?25h[?25l[71;121H9[14;29H[?25h[?25l[15;70r[15;1H[L[1;71r[15;3H[1m[36m//[m[71;117H[K[71;117H15,5[10CAll[15;5H[?25h[?25l/[15;4H[K[71;120H4[15;4H[?25h[?25l[15;3H[K[71;120H3[15;3H[?25h[?25lf[71;120H4[15;4H[?25h[?25lo[71;120H5[15;5H[?25h[?25l[1m[33mfor[m[71;120H6[15;6H[?25h[?25l([71;120H7[15;7H[?25h[?25li[71;120H8[15;8H[?25h[?25ln[71;120H9[15;9H[?25h[?25l[1m[32mint[m[71;120H10[15;10H[?25h[?25l[71;121H1[15;11H[?25h[?25li[71;121H2[15;12H[?25h[?25l[71;121H3[15;13H[?25h[?25l-=[71;121H5[15;15H[?25h[?25l[15;14H[K[71;121H4[15;14H[?25h[?25l[15;13H[K[71;121H3[15;13H[?25h[?25l=[71;121H4[15;14H[?25h[?25l[71;121H5[15;15H[?25h[?25l[1m[35m0[m[71;121H6[15;16H[?25h[?25l;[71;121H7[15;17H[?25h[?25l[71;121H8[15;18H[?25h[?25li[71;121H9[15;19H[?25h[?25l[71;120H20[15;20H[?25h[?25l<[71;121H1[15;21H[?25h[?25l[71;121H2[15;22H[?25h[?25ln[71;121H3[15;23H[?25h[?25l;[71;121H4[15;24H[?25h[?25l[71;121H5[15;25H[?25h[?25li[71;121H6[15;26H[?25h[?25l+[71;121H7[15;27H[?25h[?25l=[71;121H8[15;28H[?25h[?25l)[15;6H[46m([21C)[m[71;121H9[15;29H[?25h[?25l{[15;6H([21C)[46m{
}[m[71;120H30[15;30H[?25h[?25l[16;70r[16;1H[L[1;71r[16;1H[46m        [m
}[71;117H[K[71;117H16,4-11[7CAll[15;29H{
          [?25h[?25l[17;70r[17;1H[L[1;71r[71;117H[K[71;117H17,4-11[7CAll[17;11H[?25h[?25l  }[15;29H[46m{

[m  [46m}[m[71;121H   [17;4H[?25h[?25l[15;29H{

  }[71;118H6,1[16;1H[?25h[?25l[71;120H2-9[16;9H[?25h[?25l[71;120H1  [16;1H[?25h[?25l[71;120H2[16;2H[?25h[?25l[71;120H3[16;3H[?25h[?25l[71;120H4[16;4H[?25h[?25l[71;120H5[16;5H[?25h[?25lf[71;120H6[16;6H[?25h[?25lo[71;120H7[16;7H[?25h[?25l[1m[33mfor[m[71;120H8[16;8H[?25h[?25l([71;120H9[16;9H[?25h[?25li[71;120H10[16;10H[?25h[?25ln[71;121H1[16;11H[?25h[?25l[1m[32mint[m[71;121H2[16;12H[?25h[?25l[71;121H3[16;13H[?25h[?25lj[71;121H4[16;14H[?25h[?25l[71;121H5[16;15H[?25h[?25l=[71;121H6[16;16H[?25h[?25l[71;121H7[16;17H[?25h[?25l[1m[35m0[m[71;121H8[16;18H[?25h[?25l;[71;121H9[16;19H[?25h[?25l[71;120H20[16;20H[?25h[?25lj[71;121H1[16;21H[?25h[?25l[71;121H2[16;22H[?25h[?25l<[71;121H3[16;23H[?25h[?25l[71;121H4[16;24H[?25h[?25ln[71;121H5[16;25H[?25h[?25l;[71;121H6[16;26H[?25h[?25l[71;121H7[16;27H[?25h[?25l[71;118H5[15;27H[?25h[?25l[15;6H[46m([21C)[m[71;121H8[15;28H[?25h[?25l)[46m{[m[15;29H[K[15;27H[46m)[m{[71;121H7[15;27H[?25h[?25l[46m+[m){+[46m)[m[71;121H8[15;28H[?25h[?25l[15;6H([21C)[71;118H6,27[16;27H[?25h[?25l[71;118H5[15;27H[?25h[?25l[71;118H6[16;27H[?25h[?25lj[71;121H8[16;28H[?25h[?25l+[71;121H9[16;29H[?25h[?25l+[71;120H30[16;30H[?25h[?25l)[16;8H[46m([21C)[m[71;121H1[16;31H[?25h[?25l{[16;8H([21C)[46m{
[m  [46m}[m[71;121H2[16;32H[?25h[?25l[17;70r[17;1H[L[1;71r[17;10H[46m [m
  }[71;117H[K[71;117H17,6-13[7CAll[16;31H{[17;10H   [?25h[?25l[18;70r[18;1H[L[1;71r[71;117H[K[71;117H18,6-13[7CAll[18;13H[?25h[?25l    }[16;31H[46m{[18;5H}[m[71;121H   [18;6H[?25h[?25l[16;31H{[18;5H}[71;118H7,1[17;1H[?25h[?25l[71;120H2-9[17;9H[?25h[?25l[71;120H3-17[17;17H[?25h[?25l[71;120H2-9 [17;9H[?25h[?25l[71;120H1  [17;1H[?25h[?25l[71;120H2[17;2H[?25h[?25l[71;120H3[17;3H[?25h[?25l[71;120H4[17;4H[?25h[?25l[71;120H5[17;5H[?25h[?25l[71;120H6[17;6H[?25h[?25l[71;120H7[17;7H[?25h[?25ld[71;120H8[17;8H[?25h[?25l[1m[33mdo[m[71;120H9[17;9H[?25h[?25ldou[71;120H10[17;10H[?25h[?25lb[71;121H1[17;11H[?25h[?25ll[71;121H2[17;12H[?25h[?25l[1m[32mdouble[m[71;121H3[17;13H[?25h[?25l[71;121H4[17;14H[?25h[?25l[71;121H3[17;13H[?25h[?25ldoubl[17;12H[K[71;121H2[17;12H[?25h[?25l[17;11H[K[71;121H1[17;11H[?25h[?25l[17;10H[K[71;121H0[17;10H[?25h[?25l[1m[33mdo[m[17;9H[K[71;120H9 [17;9H[?25h[?25ld[17;8H[K[71;120H8[17;8H[?25h[?25l[17;7H[K[71;120H7[17;7H[?25h[?25lt[71;120H8[17;8H[?25h[?25l[[71;120H9[17;9H[?25h[?25li[71;120H10[17;10H[?25h[?25l][46m[[mi[46m][m[71;121H1[17;11H[?25h[?25l[[i][71;121H2[17;12H[?25h[?25lj[71;121H3[17;13H[?25h[?25l][46m[[mj[46m][m[71;121H4[17;14H[?25h[?25l[j][71;121H5[17;15H[?25h[?25l=[71;121H6[17;16H[?25h[?25l[71;121H7[17;17H[?25h[?25la[71;121H8[17;18H[?25h[?25l[[71;121H9[17;19H[?25h[?25lj[71;120H20[17;20H[?25h[?25l][46m[[mj[46m][m[71;121H1[17;21H[?25h[?25l[[j][71;121H2[17;22H[?25h[?25li[71;121H3[17;23H[?25h[?25l][46m[[mi[46m][m[71;121H4[17;24H[?25h[?25l;[i][71;121H5[17;25H[?25h[71;1H[K[17;24H[?25l[71;107H^[[17;24H[71;107H  [17;25H[71;117H17,24[9CAll[17;24H[?25h[?25l[71;107H:[17;24H[71;107H[K[71;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"transpose-matmul.c" 41L, 876C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote01:~/i220a/submit/lab11/exercises/matmul-cache$ vim transpose-matmul.c 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;71r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[71;1H"transpose-matmul.c" 41L, 876C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"matmul.h"[m

[35m#include [m[31m<errno.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m
[35m#include [m[31m<string.h>[m

[34m/** Fill in matrix t[n][n] as the transpose of matrix a[n][n].  That is,
 *  for all i, j set t[i][j] to a[j][i].
 */[m
[32mstatic[m [32mvoid[m
matrix_transpose([32mint[m n, [32mdouble[m a[][n], [32mdouble[m t[][n])
{
  [34m//@[m[30m[43mTODO[m[34m add your code here[m
  [33mfor[m([32mint[m i = [31m0[m; i < n; i++){
    [33mfor[m([32mint[m j = [31m0[m; j < n; j++){[17;7Ht[i][j] = a[j][i];
    }
  }
}


[32mvoid[m
matrix_multiply([32mint[m n, [32mdouble[m a[][n], [32mdouble[m b[][n], [32mdouble[m c[][n])
{
  [32mdouble[m (*tmp)[n] = malloc([33msizeof[m([32mdouble[m[n][n]));
  [33mif[m (!tmp) {
    fprintf([31mstderr[m, [31m"could not malloc transpose matrix: [m[35m%s\n[m[31m"[m,[29;13Hstrerror(errno));
    exit([31m1[m);
  }
  matrix_transpose(n, b, tmp);
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    [33mfor[m ([32mint[m j = [31m0[m; j < n; j++) {[35;7Hc[i][j] = [31m0[m;[36;7H[33mfor[m ([32mint[m k = [31m0[m; k < n; k++) {[37;9Hc[i][j] += a[i][k]*tmp[j][k];[38;7H}
    }
  }
}
[1m[34m~                                                                                                                                     [43;1H~                                                                                                                                     [44;1H~                                                                                                                                     [45;1H~                                                                                                                                     [46;1H~                                                                                                                                     [47;1H~                                                                                                                                     [48;1H~                                                                                                                                     [49;1H~                                                                                                                                     [50;1H~                                                                                                                                     [51;1H~                                                                                                                                     [52;1H~                                                                                                                                     [53;1H~                                                                                                                                     [54;1H~                                                                                                                                     [55;1H~                                                                                                                                     [56;1H~                                                                                                                                     [57;1H~                                                                                                                                     [58;1H~                                                                                                                                     [59;1H~                                                                                                                                     [60;1H~                                                                                                                                     [61;1H~                                                                                                                                     [62;1H~                                                                                                                                     [63;1H~                                                                                                                                     [64;1H~                                                                                                                                     [65;1H~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H17,24[9CAll[17;24H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[1m[34m#include [m[1m[35m"matmul.h"[m

[1m[34m#include [m[1m[35m<errno.h>[m
[1m[34m#include [m[1m[35m<stdio.h>[m
[1m[34m#include [m[1m[35m<stdlib.h>[m
[1m[34m#include [m[1m[35m<string.h>[m

[1m[36m/** Fill in matrix t[n][n] as the transpose of matrix a[n][n].  That is,
 *  for all i, j set t[i][j] to a[j][i].
 */[m
[1m[32mstatic[m [1m[32mvoid[m
matrix_transpose([1m[32mint[m n, [1m[32mdouble[m a[][n], [1m[32mdouble[m t[][n])
{
  [1m[36m//@[m[30m[43mTODO[m[1m[36m add your code here[m
  [1m[33mfor[m([1m[32mint[m i = [1m[35m0[m; i < n; i++){
    [1m[33mfor[m([1m[32mint[m j = [1m[35m0[m; j < n; j++){[17;7Ht[i][j] = a[j][i];
    }
  }
}


[1m[32mvoid[m
matrix_multiply([1m[32mint[m n, [1m[32mdouble[m a[][n], [1m[32mdouble[m b[][n], [1m[32mdouble[m c[][n])
{
  [1m[32mdouble[m (*tmp)[n] = malloc([1m[33msizeof[m([1m[32mdouble[m[n][n]));
  [1m[33mif[m (!tmp) {
    fprintf([1m[35mstderr[m, [1m[35m"could not malloc transpose matrix: [m[1m[31m%s\n[m[1m[35m"[m,[29;13Hstrerror(errno));
    exit([1m[35m1[m);
  }
  matrix_transpose(n, b, tmp);
  [1m[33mfor[m ([1m[32mint[m i = [1m[35m0[m; i < n; i++) {
    [1m[33mfor[m ([1m[32mint[m j = [1m[35m0[m; j < n; j++) {[35;7Hc[i][j] = [1m[35m0[m;[36;7H[1m[33mfor[m ([1m[32mint[m k = [1m[35m0[m; k < n; k++) {[37;9Hc[i][j] += a[i][k]*tmp[j][k];[38;7H}
    }
  }
}
[1m[34m~                                                                                                                                     [43;1H~                                                                                                                                     [44;1H~                                                                                                                                     [45;1H~                                                                                                                                     [46;1H~                                                                                                                                     [47;1H~                                                                                                                                     [48;1H~                                                                                                                                     [49;1H~                                                                                                                                     [50;1H~                                                                                                                                     [51;1H~                                                                                                                                     [52;1H~                                                                                                                                     [53;1H~                                                                                                                                     [54;1H~                                                                                                                                     [55;1H~                                                                                                                                     [56;1H~                                                                                                                                     [57;1H~                                                                                                                                     [58;1H~                                                                                                                                     [59;1H~                                                                                                                                     [60;1H~                                                                                                                                     [61;1H~                                                                                                                                     [62;1H~                                                                                                                                     [63;1H~                                                                                                                                     [64;1H~                                                                                                                                     [65;1H~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H17,24[9CAll"transpose-matmul.c" 41L, 876C[17;24H[?25h[?25l[71;107H^[[17;24H[71;107H  [17;24H[71;107H^[[17;24H[71;107H  [17;24H[?25h[?25l[71;107H:[17;24H[71;1H[K[71;1H:[?2004h[?25hwe[?25l[?25hq[?25l[?25h[?25l[71;4H[K[71;4H[?25h[?25l[71;3H[K[71;3H[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"transpose-matmul.c" 41L, 876C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote01:~/i220a/submit/lab11/exercises/matmul-cache$ makle[K[Ke
cc -g -Wall -std=c11 -O1   -c -o main.o main.c
cc -g -Wall -std=c11 -O1   -c -o simple-matmul.o simple-matmul.c
cc main.o simple-matmul.o  -o simple-matmul
cc -g -Wall -std=c11 -O1   -c -o transpose-matmul.o transpose-matmul.c
cc main.o transpose-matmul.o  -o transpose-matmul
rgeary1@remote01:~/i220a/submit/lab11/exercises/matmul-cache$ ./simple-matmul 4 1
2.22116e+17 7.02729e+17 9.76657e+17 2.08306e+17 
2.17616e+18 2.16772e+18 3.40213e+18 1.2273e+18 
4.86494e+18 4.48803e+18 7.27046e+18 2.8719e+18 
7.68709e+18 2.14813e+18 5.99903e+18 4.12269e+18 
rgeary1@remote01:~/i220a/submit/lab11/exercises/matmul-cache$ ./simple-matmul 4 1[C[1P[1P[1P[1P[1P[1P[1@t[1@r[1@a[1@n[1@s[1@p[1@o[1@s[1@e
2.22116e+17 7.02729e+17 9.76657e+17 2.08306e+17 
2.17616e+18 2.16772e+18 3.40213e+18 1.2273e+18 
4.86494e+18 4.48803e+18 7.27046e+18 2.8719e+18 
7.68709e+18 2.14813e+18 5.99903e+18 4.12269e+18 
rgeary1@remote01:~/i220a/submit/lab11/exercises/matmul-cache$ t[K./transpose-matmul 4 1[1@t[1@i[1@m[1@e[1@ 
2.22116e+17 7.02729e+17 9.76657e+17 2.08306e+17 
2.17616e+18 2.16772e+18 3.40213e+18 1.2273e+18 
4.86494e+18 4.48803e+18 7.27046e+18 2.8719e+18 
7.68709e+18 2.14813e+18 5.99903e+18 4.12269e+18 

real	0m0.004s
user	0m0.002s
sys	0m0.000s
rgeary1@remote01:~/i220a/submit/lab11/exercises/matmul-cache$ time ./transpose-matmul 4 1[5P[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3Psimpl[C[C[C[C[C[C[C[C[C[C[C[C[1@t[1@i[1@m[1@e[1@ 
2.22116e+17 7.02729e+17 9.76657e+17 2.08306e+17 
2.17616e+18 2.16772e+18 3.40213e+18 1.2273e+18 
4.86494e+18 4.48803e+18 7.27046e+18 2.8719e+18 
7.68709e+18 2.14813e+18 5.99903e+18 4.12269e+18 

real	0m0.002s
user	0m0.000s
sys	0m0.002s
rgeary1@remote01:~/i220a/submit/lab11/exercises/matmul-cache$ time ./simple-matmul 4 1[3@transpos[C[C[C[C[C[C[C[C[C[C[C[C[C[1P 11 15 10 10 1

real	0m12.717s
user	0m12.670s
sys	0m0.040s
rgeary1@remote01:~/i220a/submit/lab11/exercises/matmul-cache$ time ./transpose-matmul 1500 1[6Psimple-matmul 4[C[C[1P 11 15 10 10 1

real	0m14.451s
user	0m14.393s
sys	0m0.052s
rgeary1@remote01:~/i220a/submit/lab11/exercises/matmul-cache$ for s in `seq 1000 500 2500`; \
> do \
> echo -n "*** Size $s: simple:;[K time ./simple-matmul $s 1; echo; \
> for s in `seq 1000 500 2500`; do echo -n "*** Size $s: simple: time ./simple-matmul $s 1; echo; \[C[C[Kecho -n "*** Size $s:t[K transpose"; time ./transpose-matmul $s 1; echo;\
> done
> 
> ;
> "
> for s in `seq 1000 500 2500`; do echo -n "*** Size $s: simple: time ./simple-matmul $s 1; echo; \
echo -n "*** Size $s: transpose"; time ./transpose-matmul $s 1; echo;\
done

;
"[A[A[A[A[A[Ctime ./simple-matmul 1500 1[K
[K
[K
[K
[K
[K[A[A[A[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3@transpos[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[6Psimple-matmul 4[C[C[C[C[C[C[C[C[C[C[C[6@transpose-matmul 1500[C[C[C[C[C[C[C[C[C[C[C[3Psimpl[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cfor s in `seq 1000 500 2500`; do echo -n "*** Size $s: simple: time ./simple-matmul $s 1; echo; \
echo -n "*** Size $s: transpose"; time ./transpose-matmul $s 1; echo;\
done

;
"[A[A[A[A[A[Ctime ./simple-matmul 1500 1[K
[K
[K
[K
[K
[K[A[A[A[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cfor s in `seq 1000 500 2500`; do echo -n "*** Size $s: simple: time ./simple-matmul $s 1; echo; \
echo -n "*** Size $s: transpose"; time ./transpose-matmul $s 1; echo;\
done

;
"
> 
> 
> 
> bash: syntax error: unexpected end of file
exit

Script done on 2020-11-12 13:11:03-05:00 [COMMAND_EXIT_CODE="2"]
Script started on 2020-11-12 13:11:27-05:00 [TERM="xterm" TTY="/dev/pts/1" COLUMNS="134" LINES="71"]
rgeary1@remote01:~/i220a/submit/lab11$ ";doneecho -n "*** Size $s: transpose"; time ./transpose-matmul $s 1; echo;\[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cdone[K;[K"[Kcd nm[K[Kexercises/matmul-cache/
rgeary1@remote01:~/i220a/submit/lab11/exercises/matmul-cache$ cd exercises/matmul-cache/"[K;doneecho -n "*** Size $s: transpose"; time ./transpose-matmul $s 1; echo;\[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C"; for s in `seq 1000 500 2500`; do echo -n "*** Size $s: simple: time ./simple-matmul $s 1; echo; \[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C;[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C"; for s in `seq 1000 500 2500`; do echo -n "*** Size $s: simple: time ./simple-matmul $s 1; echo; \[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C": time .[1@/[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cfor s in `seq 1000 500 2500`; do echo -n "*** Size $s: simple": time ./[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cfor s in `seq 1000 500 2500`; do echo -n "*** Size $s: simple": time ./s[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cfor s in `seq 1000 500 2500`; do echo -n "*** Size $s: simple": time ./si[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2Pecho -n "*** Size $s: transpose"; time ./transpose-matmul $s 1; echo;\
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cfor s in `seq 1000 500 2500`; do echo -n "*** Size $s: simple": time ./simple-matmul $s 1; echo; \
> for s in `seq 1000 500 2500`; do echo -n "*** Size $s: simple": time ./simple-matmul $s 1; echo; \[C[Ccd exercises/matmul-cache/[K[C[C"[K;done[C[Cecho -n "*** Size $s: transpose"; time ./transpose-matmul $s 1; echo;\
> done [K
*** Size 1000: simple: time ./simple-matmul 1000 1
*** Size 1000: transpose
real	0m3.735s
user	0m3.722s
sys	0m0.012s

*** Size 1500: simple: time ./simple-matmul 1500 1
*** Size 1500: transpose
real	0m12.668s
user	0m12.633s
sys	0m0.032s

*** Size 2000: simple: time ./simple-matmul 2000 1
*** Size 2000: transpose
real	0m30.164s
user	0m30.137s
sys	0m0.008s

*** Size 2500: simple: time ./simple-matmul 2500 1
*** Size 2500: transpose
real	0m59.061s
user	0m58.962s
sys	0m0.064s

rgeary1@remote01:~/i220a/submit/lab11/exercises/matmul-cache$ for s in `seq 1000 500 2500`; do echo -n "*** Size $s: simple": time ./simple-matmul $s 1; echo; echo -n "*** Size $s: transpose"; time ./transpose-matmul $s 1; echo;done[A[46Pcd exercises/matmul-cache/
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cfor s in `seq 1000 500 2500`; do echo -n "*** Size $s: simple": time ./simple-matmul $s 1; echo; echo -n "*** Size $s: transpose"; time ./transpose-matmul $s 1; echo;done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C simple": time ./sim[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C; simple": time ./si[1@m[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C simple": time ./sim[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C: simple": time ./si[1@m[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C time ./sim[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C; time ./si[1@m[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

*** Size 1000: simple
real	0m3.791s
user	0m3.773s
sys	0m0.016s

*** Size 1000: transpose
real	0m3.735s
user	0m3.724s
sys	0m0.008s

*** Size 1500: simple
real	0m14.011s
user	0m13.989s
sys	0m0.012s

*** Size 1500: transpose
real	0m12.679s
user	0m12.658s
sys	0m0.012s

*** Size 2000: simple
real	0m38.437s
user	0m38.333s
sys	0m0.088s

*** Size 2000: transpose
real	0m30.133s
user	0m30.091s
sys	0m0.036s

*** Size 2500: simple
real	1m19.220s
user	1m19.009s
sys	0m0.177s

*** Size 2500: transpose
real	0m59.616s
user	0m59.489s
sys	0m0.112s

rgeary1@remote01:~/i220a/submit/lab11/exercises/matmul-cache$ cd ../int-search/
rgeary1@remote01:~/i220a/submit/lab11/exercises/int-search$ vim int_compare.c
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;71r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[71;1H"int_compare.c" 8L, 177C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m/** Return < [m[31m0[m[34m, [m[31m0[m[34m, > [m[31m0[m[34m when int pointed to by p1 is <, ==, > int pointed
 *  to by p2.
 */[m
[32mint[m
int_compare([32mconst[m [32mvoid[m *p1, [32mconst[m [32mvoid[m *p2) {
  [33mreturn[m *([32mint[m*)p1 - *([32mint[m*)p2;
}

[1m[34m~                                                                                                                                     [10;1H~                                                                                                                                     [11;1H~                                                                                                                                     [12;1H~                                                                                                                                     [13;1H~                                                                                                                                     [14;1H~                                                                                                                                     [15;1H~                                                                                                                                     [16;1H~                                                                                                                                     [17;1H~                                                                                                                                     [18;1H~                                                                                                                                     [19;1H~                                                                                                                                     [20;1H~                                                                                                                                     [21;1H~                                                                                                                                     [22;1H~                                                                                                                                     [23;1H~                                                                                                                                     [24;1H~                                                                                                                                     [25;1H~                                                                                                                                     [26;1H~                                                                                                                                     [27;1H~                                                                                                                                     [28;1H~                                                                                                                                     [29;1H~                                                                                                                                     [30;1H~                                                                                                                                     [31;1H~                                                                                                                                     [32;1H~                                                                                                                                     [33;1H~                                                                                                                                     [34;1H~                                                                                                                                     [35;1H~                                                                                                                                     [36;1H~                                                                                                                                     [37;1H~                                                                                                                                     [38;1H~                                                                                                                                     [39;1H~                                                                                                                                     [40;1H~                                                                                                                                     [41;1H~                                                                                                                                     [42;1H~                                                                                                                                     [43;1H~                                                                                                                                     [44;1H~                                                                                                                                     [45;1H~                                                                                                                                     [46;1H~                                                                                                                                     [47;1H~                                                                                                                                     [48;1H~                                                                                                                                     [49;1H~                                                                                                                                     [50;1H~                                                                                                                                     [51;1H~                                                                                                                                     [52;1H~                                                                                                                                     [53;1H~                                                                                                                                     [54;1H~                                                                                                                                     [55;1H~                                                                                                                                     [56;1H~                                                                                                                                     [57;1H~                                                                                                                                     [58;1H~                                                                                                                                     [59;1H~                                                                                                                                     [60;1H~                                                                                                                                     [61;1H~                                                                                                                                     [62;1H~                                                                                                                                     [63;1H~                                                                                                                                     [64;1H~                                                                                                                                     [65;1H~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H1,1[11CAll[1;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[1m[36m/** Return < [m[1m[35m0[m[1m[36m, [m[1m[35m0[m[1m[36m, > [m[1m[35m0[m[1m[36m when int pointed to by p1 is <, ==, > int pointed
 *  to by p2.
 */[m
[1m[32mint[m
int_compare([1m[32mconst[m [1m[32mvoid[m *p1, [1m[32mconst[m [1m[32mvoid[m *p2) {
  [1m[33mreturn[m *([1m[32mint[m*)p1 - *([1m[32mint[m*)p2;
}

[1m[34m~                                                                                                                                     [10;1H~                                                                                                                                     [11;1H~                                                                                                                                     [12;1H~                                                                                                                                     [13;1H~                                                                                                                                     [14;1H~                                                                                                                                     [15;1H~                                                                                                                                     [16;1H~                                                                                                                                     [17;1H~                                                                                                                                     [18;1H~                                                                                                                                     [19;1H~                                                                                                                                     [20;1H~                                                                                                                                     [21;1H~                                                                                                                                     [22;1H~                                                                                                                                     [23;1H~                                                                                                                                     [24;1H~                                                                                                                                     [25;1H~                                                                                                                                     [26;1H~                                                                                                                                     [27;1H~                                                                                                                                     [28;1H~                                                                                                                                     [29;1H~                                                                                                                                     [30;1H~                                                                                                                                     [31;1H~                                                                                                                                     [32;1H~                                                                                                                                     [33;1H~                                                                                                                                     [34;1H~                                                                                                                                     [35;1H~                                                                                                                                     [36;1H~                                                                                                                                     [37;1H~                                                                                                                                     [38;1H~                                                                                                                                     [39;1H~                                                                                                                                     [40;1H~                                                                                                                                     [41;1H~                                                                                                                                     [42;1H~                                                                                                                                     [43;1H~                                                                                                                                     [44;1H~                                                                                                                                     [45;1H~                                                                                                                                     [46;1H~                                                                                                                                     [47;1H~                                                                                                                                     [48;1H~                                                                                                                                     [49;1H~                                                                                                                                     [50;1H~                                                                                                                                     [51;1H~                                                                                                                                     [52;1H~                                                                                                                                     [53;1H~                                                                                                                                     [54;1H~                                                                                                                                     [55;1H~                                                                                                                                     [56;1H~                                                                                                                                     [57;1H~                                                                                                                                     [58;1H~                                                                                                                                     [59;1H~                                                                                                                                     [60;1H~                                                                                                                                     [61;1H~                                                                                                                                     [62;1H~                                                                                                                                     [63;1H~                                                                                                                                     [64;1H~                                                                                                                                     [65;1H~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H1,1[11CAll"int_compare.c" 8L, 177C[1;1H[?25h[?25l[71;107Hv[1;1H[71;107H1[1;1H[71;1H[1m-- VISUAL --[m[71;13H[K[71;107H1[1;1H[71;117H1,1[11CAll[1;1H[?25h[?25l[71;107Hi[1;1H[?25h[?25l[71;108Hm[1;1H[71;107H1 [1;1H[?25h[?25l[71;107H:[1;1H[71;107H [1;1H[71;1H[K[71;1H:[?2004h'<,'>[?25h[?25l[71;1H[K[71;117H1,1[11CAll[1;1H[?25h[?25l[71;117H[K[71;1H:[?2004h"[?25h[?25l[71;2H[K[71;2H[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"int_compare.c" 8L, 177C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote01:~/i220a/submit/lab11/exercises/int-search$ ls -l
total 24
-rw-r----- 1 rgeary1 rgeary1  282 Nov  9 21:07 binary-search.c
-rw-r----- 1 rgeary1 rgeary1  177 Nov 12 13:21 int_compare.c
-rw-r----- 1 rgeary1 rgeary1  221 Nov  9 21:07 int_compare.h
-rw-r----- 1 rgeary1 rgeary1  179 Nov  9 21:07 linear-search.c
-rw-r----- 1 rgeary1 rgeary1 1086 Nov  9 21:07 main.c
-rw-r----- 1 rgeary1 rgeary1  244 Nov  9 21:07 Makefile
rgeary1@remote01:~/i220a/submit/lab11/exercises/int-search$ vim linear-search.c 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;71r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[71;1H"linear-search.c" 6L, 179C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m/** Return index of element in a[nElements]; < [m[31m0[m[34m if not found. */[m
[32mint[m
search_for_element([32mint[m a[], [32mint[m nElements, [32mint[m element)
{
  [34m//@[m[30m[43mTODO[m[34m add your code here to meet above spec.[m
}
[1m[34m~                                                                                                                                     [8;1H~                                                                                                                                     [9;1H~                                                                                                                                     [10;1H~                                                                                                                                     [11;1H~                                                                                                                                     [12;1H~                                                                                                                                     [13;1H~                                                                                                                                     [14;1H~                                                                                                                                     [15;1H~                                                                                                                                     [16;1H~                                                                                                                                     [17;1H~                                                                                                                                     [18;1H~                                                                                                                                     [19;1H~                                                                                                                                     [20;1H~                                                                                                                                     [21;1H~                                                                                                                                     [22;1H~                                                                                                                                     [23;1H~                                                                                                                                     [24;1H~                                                                                                                                     [25;1H~                                                                                                                                     [26;1H~                                                                                                                                     [27;1H~                                                                                                                                     [28;1H~                                                                                                                                     [29;1H~                                                                                                                                     [30;1H~                                                                                                                                     [31;1H~                                                                                                                                     [32;1H~                                                                                                                                     [33;1H~                                                                                                                                     [34;1H~                                                                                                                                     [35;1H~                                                                                                                                     [36;1H~                                                                                                                                     [37;1H~                                                                                                                                     [38;1H~                                                                                                                                     [39;1H~                                                                                                                                     [40;1H~                                                                                                                                     [41;1H~                                                                                                                                     [42;1H~                                                                                                                                     [43;1H~                                                                                                                                     [44;1H~                                                                                                                                     [45;1H~                                                                                                                                     [46;1H~                                                                                                                                     [47;1H~                                                                                                                                     [48;1H~                                                                                                                                     [49;1H~                                                                                                                                     [50;1H~                                                                                                                                     [51;1H~                                                                                                                                     [52;1H~                                                                                                                                     [53;1H~                                                                                                                                     [54;1H~                                                                                                                                     [55;1H~                                                                                                                                     [56;1H~                                                                                                                                     [57;1H~                                                                                                                                     [58;1H~                                                                                                                                     [59;1H~                                                                                                                                     [60;1H~                                                                                                                                     [61;1H~                                                                                                                                     [62;1H~                                                                                                                                     [63;1H~                                                                                                                                     [64;1H~                                                                                                                                     [65;1H~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H1,1[11CAll[1;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[1m[36m/** Return index of element in a[nElements]; < [m[1m[35m0[m[1m[36m if not found. */[m
[1m[32mint[m
search_for_element([1m[32mint[m a[], [1m[32mint[m nElements, [1m[32mint[m element)
{
  [1m[36m//@[m[30m[43mTODO[m[1m[36m add your code here to meet above spec.[m
}
[1m[34m~                                                                                                                                     [8;1H~                                                                                                                                     [9;1H~                                                                                                                                     [10;1H~                                                                                                                                     [11;1H~                                                                                                                                     [12;1H~                                                                                                                                     [13;1H~                                                                                                                                     [14;1H~                                                                                                                                     [15;1H~                                                                                                                                     [16;1H~                                                                                                                                     [17;1H~                                                                                                                                     [18;1H~                                                                                                                                     [19;1H~                                                                                                                                     [20;1H~                                                                                                                                     [21;1H~                                                                                                                                     [22;1H~                                                                                                                                     [23;1H~                                                                                                                                     [24;1H~                                                                                                                                     [25;1H~                                                                                                                                     [26;1H~                                                                                                                                     [27;1H~                                                                                                                                     [28;1H~                                                                                                                                     [29;1H~                                                                                                                                     [30;1H~                                                                                                                                     [31;1H~                                                                                                                                     [32;1H~                                                                                                                                     [33;1H~                                                                                                                                     [34;1H~                                                                                                                                     [35;1H~                                                                                                                                     [36;1H~                                                                                                                                     [37;1H~                                                                                                                                     [38;1H~                                                                                                                                     [39;1H~                                                                                                                                     [40;1H~                                                                                                                                     [41;1H~                                                                                                                                     [42;1H~                                                                                                                                     [43;1H~                                                                                                                                     [44;1H~                                                                                                                                     [45;1H~                                                                                                                                     [46;1H~                                                                                                                                     [47;1H~                                                                                                                                     [48;1H~                                                                                                                                     [49;1H~                                                                                                                                     [50;1H~                                                                                                                                     [51;1H~                                                                                                                                     [52;1H~                                                                                                                                     [53;1H~                                                                                                                                     [54;1H~                                                                                                                                     [55;1H~                                                                                                                                     [56;1H~                                                                                                                                     [57;1H~                                                                                                                                     [58;1H~                                                                                                                                     [59;1H~                                                                                                                                     [60;1H~                                                                                                                                     [61;1H~                                                                                                                                     [62;1H~                                                                                                                                     [63;1H~                                                                                                                                     [64;1H~                                                                                                                                     [65;1H~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H1,1[11CAll"linear-search.c" 6L, 179C[1;1H[?25h[?25l[71;117H5,48[5;48H[?25h[?25l[71;107Hi[5;48H[71;107H [5;48H[71;1H[1m-- INSERT --[m[71;13H[K[71;117H5,48[10CAll[5;48H[?25h[?25l[71;120H9[5;49H[?25h[?25l[6;70r[6;1H[L[1;71r[6;3H[1m[36m//[m[71;117H[K[71;117H6,5[11CAll[6;5H[?25h[?25l/[6;4H[K[71;119H4[6;4H[?25h[?25l[6;3H[K[71;119H3[6;3H[?25h[?25lf[71;119H4[6;4H[?25h[?25lo[71;119H5[6;5H[?25h[?25l[1m[33mfor[m[71;119H6[6;6H[?25h[?25l([71;119H7[6;7H[?25h[?25l[6;6H[K[71;119H6[6;6H[?25h[?25lfo[6;5H[K[71;119H5[6;5H[?25h[?25l[6;4H[K[71;119H4[6;4H[?25h[?25l[6;3H[K[71;119H3[6;3H[?25h[?25lw[71;119H4[6;4H[?25h[?25lh[71;119H5[6;5H[?25h[?25li[71;119H6[6;6H[?25h[?25ll[71;119H7[6;7H[?25h[?25l  [1m[33mwhile[m[71;119H8[6;8H[?25h[?25l([71;119H9[6;9H[?25h[?25ln[71;119H10[6;10H[?25h[?25lE[71;120H1[6;11H[?25h[?25ll[71;120H2[6;12H[?25h[?25le[71;120H3[6;13H[?25h[?25lm[71;120H4[6;14H[?25h[?25le[71;120H5[6;15H[?25h[?25ln[71;120H6[6;16H[?25h[?25lt[71;120H7[6;17H[?25h[?25ls[71;120H8[6;18H[?25h[?25l[6;17H[K[71;120H7[6;17H[?25h[?25l[6;16H[K[71;120H6[6;16H[?25h[?25l[6;15H[K[71;120H5[6;15H[?25h[?25l[6;14H[K[71;120H4[6;14H[?25h[?25l[6;13H[K[71;120H3[6;13H[?25h[?25l[6;12H[K[71;120H2[6;12H[?25h[?25l[6;11H[K[71;120H1[6;11H[?25h[?25l[6;10H[K[71;120H0[6;10H[?25h[?25l[6;9H[K[71;119H9 [6;9H[?25h[?25l[6;8H[K[71;119H8[6;8H[?25h[?25l  whil[6;7H[K[71;119H7[6;7H[?25h[?25l[6;6H[K[71;119H6[6;6H[?25h[?25l[6;5H[K[71;119H5[6;5H[?25h[?25l[6;4H[K[71;119H4[6;4H[?25h[?25l[6;3H[K[71;119H3[6;3H[?25h[?25lf[71;119H4[6;4H[?25h[?25lo[71;119H5[6;5H[?25h[?25l[1m[33mfor[m[71;119H6[6;6H[?25h[?25l[71;119H7[6;7H[?25h[?25l[71;119H6[6;6H[?25h[?25l([71;119H7[6;7H[?25h[?25li[71;119H8[6;8H[?25h[?25ln[71;119H9[6;9H[?25h[?25l[1m[32mint[m[71;119H10[6;10H[?25h[?25l[71;120H1[6;11H[?25h[?25li[71;120H2[6;12H[?25h[?25l[71;120H3[6;13H[?25h[?25l=[71;120H4[6;14H[?25h[?25l[71;120H5[6;15H[?25h[?25ln[71;120H6[6;16H[?25h[?25lE[71;120H7[6;17H[?25h[?25ll[71;120H8[6;18H[?25h[?25l[71;120H9-25[6;25H[?25h[?25l[71;120H8   [6;18H[?25h[?25le[71;120H9[6;19H[?25h[?25lm[71;119H20[6;20H[?25h[?25le[71;120H1[6;21H[?25h[?25ln[71;120H2[6;22H[?25h[?25lt[71;120H3[6;23H[?25h[?25ls[71;120H4[6;24H[?25h[?25l[6;23H[K[71;120H3[6;23H[?25h[?25l[6;22H[K[71;120H2[6;22H[?25h[?25l[6;21H[K[71;120H1[6;21H[?25h[?25l[6;20H[K[71;120H0[6;20H[?25h[?25l[6;19H[K[71;119H19[6;19H[?25h[?25l[6;18H[K[71;120H8[6;18H[?25h[?25l[6;17H[K[71;120H7[6;17H[?25h[?25l[6;16H[K[71;120H6[6;16H[?25h[?25l[6;15H[K[71;120H5[6;15H[?25h[?25l[1m[35m0[m[71;120H6[6;16H[?25h[?25l;[71;120H7[6;17H[?25h[?25l[71;120H8[6;18H[?25h[?25li[71;120H9[6;19H[?25h[?25l[71;119H20[6;20H[?25h[?25l<[71;120H1[6;21H[?25h[?25l[71;120H2[6;22H[?25h[?25ln[71;120H3[6;23H[?25h[?25lE[71;120H4[6;24H[?25h[?25ll[71;120H5[6;25H[?25h[?25le[71;120H6[6;26H[?25h[?25lm[71;120H7[6;27H[?25h[?25le[71;120H8[6;28H[?25h[?25ln[71;120H9[6;29H[?25h[?25lt[71;119H30[6;30H[?25h[?25ls[71;120H1[6;31H[?25h[?25l;[71;120H2[6;32H[?25h[?25l[71;120H3[6;33H[?25h[?25li[71;120H4[6;34H[?25h[?25l+[71;120H5[6;35H[?25h[?25l+[71;120H6[6;36H[?25h[?25l)[6;6H[46m([29C)[m[71;120H7[6;37H[?25h[?25l{[6;6H([29C)[46m{
}[m[71;120H8[6;38H[?25h[?25l[7;70r[7;1H[L[1;71r[7;1H[46m        [m
}[71;117H[K[71;117H7,4-11[8CAll[6;37H{
          [?25h[?25l[8;70r[8;1H[L[1;71r[71;117H[K[71;117H8,4-11[8CAll[8;11H[?25h[?25l  }[6;37H[46m{

[m  [46m}[m[71;120H   [8;4H[?25h[?25l[6;37H{

  }[71;117H7,1[7;1H[?25h[?25l[71;119H2[7;2H[?25h[?25l[71;119H3[7;3H[?25h[?25l[71;119H4[7;4H[?25h[?25l[71;119H5[7;5H[?25h[?25li[71;119H6[7;6H[?25h[?25l[1m[33mif[m[71;119H7[7;7H[?25h[?25l([71;119H8[7;8H[?25h[?25la[71;119H9[7;9H[?25h[?25l[[71;119H10[7;10H[?25h[?25li[71;120H1[7;11H[?25h[?25l][46m[[mi[46m][m[71;120H2[7;12H[?25h[?25l[i][71;120H3[7;13H[?25h[?25l=[71;120H4[7;14H[?25h[?25l[71;120H5[7;15H[?25h[?25le[71;120H6[7;16H[?25h[?25ll[71;120H7[7;17H[?25h[?25le[71;120H8[7;18H[?25h[?25lm[71;120H9[7;19H[?25h[?25lt[71;119H20[7;20H[?25h[?25ln[71;120H1[7;21H[?25h[?25le[71;120H2[7;22H[?25h[?25l[7;21H[K[71;120H1[7;21H[?25h[?25l[7;20H[K[71;120H0[7;20H[?25h[?25l[7;19H[K[71;119H19[7;19H[?25h[?25le[71;119H20[7;20H[?25h[?25ln[71;120H1[7;21H[?25h[?25lt[71;120H2[7;22H[?25h[?25l)[7;7H[46m([14C)[m[71;120H3[7;23H[?25h[?25l{[7;7H([14C)[46m{
[m  [46m}[m[71;120H4[7;24H[?25h[?25l[8;70r[8;1H[L[1;71r[8;10H[46m [m
  }[71;117H[K[71;117H8,6-13[8CAll[7;23H{[8;10H   [?25h[?25l[9;70r[9;1H[L[1;71r[71;117H[K[71;117H9,6-13[8CAll[9;13H[?25h[?25l    }[7;23H[46m{[9;5H}[m[71;120H   [9;6H[?25h[?25l[7;23H{[9;5H}[71;117H8,1[8;1H[?25h[?25l[71;119H2[8;2H[?25h[?25l[71;119H3[8;3H[?25h[?25l[71;119H4[8;4H[?25h[?25l[71;119H5[8;5H[?25h[?25l[71;119H6[8;6H[?25h[?25l[71;119H7[8;7H[?25h[?25lr[71;119H8[8;8H[?25h[?25le[71;119H9[8;9H[?25h[?25lt[71;119H10[8;10H[?25h[?25lu[71;120H1[8;11H[?25h[?25lr[71;120H2[8;12H[?25h[?25l[1m[33mreturn[m[71;120H3[8;13H[?25h[?25l[71;120H4[8;14H[?25h[?25li[71;120H5[8;15H[?25h[?25l;[71;120H6[8;16H[?25h[?25l[4;1H[46m{[11;1H}[m[71;117H4,2 [4;2H[?25h[?25l{[6;37H[46m{[10;3H}[m
}[71;117H10,4[10;4H[?25h[?25l[11;70r[11;1H[L[1;71r[71;117H[K[71;117H11,3[10CAll[6;37H{[10;3H}
  [?25h[?25lr[71;120H4[11;4H[?25h[?25le[71;120H5[11;5H[?25h[?25lt[71;120H6[11;6H[?25h[?25lu[71;120H7[11;7H[?25h[?25lr[71;120H8[11;8H[?25h[?25l  [1m[33mreturn[m[71;120H9[11;9H[?25h[?25l[71;120H10[11;10H[?25h[?25l-[71;121H1[11;11H[?25h[?25l[1m[35m1[m[71;121H2[11;12H[?25h[?25l;[71;121H3[11;13H[?25h[71;1H[K[11;12H[?25l[71;107H^[[11;12H[71;107H  [11;13H[71;117H11,12[9CAll[11;12H[?25h[?25l[71;107H:[11;12H[71;107H[K[71;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"linear-search.c" 12L, 280C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote01:~/i220a/submit/lab11/exercises/int-search$ make
cc -g -Wall -std=c11 -O1   -c -o linear-search.o linear-search.c
[01m[Klinear-search.c:[m[K In function â€˜[01m[Ksearch_for_element[m[Kâ€™:
[01m[Klinear-search.c:7:8:[m[K [01;35m[Kwarning: [m[Ksuggest parentheses around assignment used as truth value [[01;35m[K-Wparentheses[m[K]
     if([01;35m[Ka[m[K[i] = element){
        [01;35m[K^[m[K
cc -g -Wall -std=c11 -O1   -c -o main.o main.c
cc -g -Wall -std=c11 -O1   -c -o int_compare.o int_compare.c
cc   linear-search.o main.o int_compare.o   -o linear-search
cc -g -Wall -std=c11 -O1   -c -o binary-search.o binary-search.c
cc   binary-search.o main.o int_compare.o   -o binary-search
rgeary1@remote01:~/i220a/submit/lab11/exercises/int-search$ makevim linear-search.c 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;71r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[71;1H"linear-search.c" 12L, 280C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m/** Return index of element in a[nElements]; < [m[31m0[m[34m if not found. */[m
[32mint[m
search_for_element([32mint[m a[], [32mint[m nElements, [32mint[m element)
{
  [34m//@[m[30m[43mTODO[m[34m add your code here to meet above spec.[m
  [33mfor[m([32mint[m i = [31m0[m; i < nElements; i++){
    [33mif[m(a[i] = element){[8;7H[33mreturn[m i;
    }
  }
  [33mreturn[m -[31m1[m;
}
[1m[34m~                                                                                                                                     [14;1H~                                                                                                                                     [15;1H~                                                                                                                                     [16;1H~                                                                                                                                     [17;1H~                                                                                                                                     [18;1H~                                                                                                                                     [19;1H~                                                                                                                                     [20;1H~                                                                                                                                     [21;1H~                                                                                                                                     [22;1H~                                                                                                                                     [23;1H~                                                                                                                                     [24;1H~                                                                                                                                     [25;1H~                                                                                                                                     [26;1H~                                                                                                                                     [27;1H~                                                                                                                                     [28;1H~                                                                                                                                     [29;1H~                                                                                                                                     [30;1H~                                                                                                                                     [31;1H~                                                                                                                                     [32;1H~                                                                                                                                     [33;1H~                                                                                                                                     [34;1H~                                                                                                                                     [35;1H~                                                                                                                                     [36;1H~                                                                                                                                     [37;1H~                                                                                                                                     [38;1H~                                                                                                                                     [39;1H~                                                                                                                                     [40;1H~                                                                                                                                     [41;1H~                                                                                                                                     [42;1H~                                                                                                                                     [43;1H~                                                                                                                                     [44;1H~                                                                                                                                     [45;1H~                                                                                                                                     [46;1H~                                                                                                                                     [47;1H~                                                                                                                                     [48;1H~                                                                                                                                     [49;1H~                                                                                                                                     [50;1H~                                                                                                                                     [51;1H~                                                                                                                                     [52;1H~                                                                                                                                     [53;1H~                                                                                                                                     [54;1H~                                                                                                                                     [55;1H~                                                                                                                                     [56;1H~                                                                                                                                     [57;1H~                                                                                                                                     [58;1H~                                                                                                                                     [59;1H~                                                                                                                                     [60;1H~                                                                                                                                     [61;1H~                                                                                                                                     [62;1H~                                                                                                                                     [63;1H~                                                                                                                                     [64;1H~                                                                                                                                     [65;1H~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H11,12[9CAll[11;12H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[1m[36m/** Return index of element in a[nElements]; < [m[1m[35m0[m[1m[36m if not found. */[m
[1m[32mint[m
search_for_element([1m[32mint[m a[], [1m[32mint[m nElements, [1m[32mint[m element)
{
  [1m[36m//@[m[30m[43mTODO[m[1m[36m add your code here to meet above spec.[m
  [1m[33mfor[m([1m[32mint[m i = [1m[35m0[m; i < nElements; i++){
    [1m[33mif[m(a[i] = element){[8;7H[1m[33mreturn[m i;
    }
  }
  [1m[33mreturn[m -[1m[35m1[m;
}
[1m[34m~                                                                                                                                     [14;1H~                                                                                                                                     [15;1H~                                                                                                                                     [16;1H~                                                                                                                                     [17;1H~                                                                                                                                     [18;1H~                                                                                                                                     [19;1H~                                                                                                                                     [20;1H~                                                                                                                                     [21;1H~                                                                                                                                     [22;1H~                                                                                                                                     [23;1H~                                                                                                                                     [24;1H~                                                                                                                                     [25;1H~                                                                                                                                     [26;1H~                                                                                                                                     [27;1H~                                                                                                                                     [28;1H~                                                                                                                                     [29;1H~                                                                                                                                     [30;1H~                                                                                                                                     [31;1H~                                                                                                                                     [32;1H~                                                                                                                                     [33;1H~                                                                                                                                     [34;1H~                                                                                                                                     [35;1H~                                                                                                                                     [36;1H~                                                                                                                                     [37;1H~                                                                                                                                     [38;1H~                                                                                                                                     [39;1H~                                                                                                                                     [40;1H~                                                                                                                                     [41;1H~                                                                                                                                     [42;1H~                                                                                                                                     [43;1H~                                                                                                                                     [44;1H~                                                                                                                                     [45;1H~                                                                                                                                     [46;1H~                                                                                                                                     [47;1H~                                                                                                                                     [48;1H~                                                                                                                                     [49;1H~                                                                                                                                     [50;1H~                                                                                                                                     [51;1H~                                                                                                                                     [52;1H~                                                                                                                                     [53;1H~                                                                                                                                     [54;1H~                                                                                                                                     [55;1H~                                                                                                                                     [56;1H~                                                                                                                                     [57;1H~                                                                                                                                     [58;1H~                                                                                                                                     [59;1H~                                                                                                                                     [60;1H~                                                                                                                                     [61;1H~                                                                                                                                     [62;1H~                                                                                                                                     [63;1H~                                                                                                                                     [64;1H~                                                                                                                                     [65;1H~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H11,12[9CAll"linear-search.c" 12L, 280C[11;12H[?25h[?25l[71;117H7,14 [7;14H[?25h[?25l[71;107Hi[7;14H[71;107H [7;14H[71;1H[1m-- INSERT --[m[71;13H[K[71;117H7,14[10CAll[7;14H[?25h[?25l= element){[71;120H5[7;15H[?25h[71;1H[K[7;14H[?25l[71;107H^[[7;14H[71;107H  [7;15H[71;117H7,14[10CAll[7;14H[?25h[?25l[71;107H:[7;14H[71;107H[K[71;1H:[?2004h[?25hwq[?25l[?25h[?25l[?1006l[?1002l[?2004l"linear-search.c" 12L, 281C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote01:~/i220a/submit/lab11/exercises/int-search$ make
cc -g -Wall -std=c11 -O1   -c -o linear-search.o linear-search.c
cc   linear-search.o main.o int_compare.o   -o linear-search
rgeary1@remote01:~/i220a/submit/lab11/exercises/int-search$ ./linear-search 100 1
rgeary1@remote01:~/i220a/submit/lab11/exercises/int-search$ time ./linear-search 20000[K 20000[K

real	0m7.701s
user	0m7.690s
sys	0m0.008s
rgeary1@remote01:~/i220a/submit/lab11/exercises/int-search$ time ./linear-search 2000 2000[1P[1P[1P[1P[1P[1P[1@b[1@i[1@n[1@a[1@r[1@y

real	0m0.466s
user	0m0.465s
sys	0m0.000s
rgeary1@remote01:~/i220a/submit/lab11/exercises/int-search$ cd ../coverage/
rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ ls -l
total 8
-rw-r----- 1 rgeary1 rgeary1 781 Nov  9 21:07 coverage.c
-rw-r----- 1 rgeary1 rgeary1 164 Nov  9 21:07 Makefile
rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ make
cc -g -Wall -std=c11 -fprofile-arcs -ftest-coverage    coverage.c   -o coverage
rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ vim Makefile 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;71r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[71;1H"Makefile" 10L, 164C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[36mCFLAGS [m= -g -Wall -std=c11 -fprofile-arcs -ftest-coverage

[36mTARGETS [m=[7Ccoverage

[36mcoverage:[m[7Ccoverage.c

[33m.PHONY:[m[9Cclean
[36mclean:[m
[31m                rm -f [m[36m$(TARGETS)[m[31m *.o *~ *.gcda *.gcno[m

[1m[34m~                                                                                                                                     [12;1H~                                                                                                                                     [13;1H~                                                                                                                                     [14;1H~                                                                                                                                     [15;1H~                                                                                                                                     [16;1H~                                                                                                                                     [17;1H~                                                                                                                                     [18;1H~                                                                                                                                     [19;1H~                                                                                                                                     [20;1H~                                                                                                                                     [21;1H~                                                                                                                                     [22;1H~                                                                                                                                     [23;1H~                                                                                                                                     [24;1H~                                                                                                                                     [25;1H~                                                                                                                                     [26;1H~                                                                                                                                     [27;1H~                                                                                                                                     [28;1H~                                                                                                                                     [29;1H~                                                                                                                                     [30;1H~                                                                                                                                     [31;1H~                                                                                                                                     [32;1H~                                                                                                                                     [33;1H~                                                                                                                                     [34;1H~                                                                                                                                     [35;1H~                                                                                                                                     [36;1H~                                                                                                                                     [37;1H~                                                                                                                                     [38;1H~                                                                                                                                     [39;1H~                                                                                                                                     [40;1H~                                                                                                                                     [41;1H~                                                                                                                                     [42;1H~                                                                                                                                     [43;1H~                                                                                                                                     [44;1H~                                                                                                                                     [45;1H~                                                                                                                                     [46;1H~                                                                                                                                     [47;1H~                                                                                                                                     [48;1H~                                                                                                                                     [49;1H~                                                                                                                                     [50;1H~                                                                                                                                     [51;1H~                                                                                                                                     [52;1H~                                                                                                                                     [53;1H~                                                                                                                                     [54;1H~                                                                                                                                     [55;1H~                                                                                                                                     [56;1H~                                                                                                                                     [57;1H~                                                                                                                                     [58;1H~                                                                                                                                     [59;1H~                                                                                                                                     [60;1H~                                                                                                                                     [61;1H~                                                                                                                                     [62;1H~                                                                                                                                     [63;1H~                                                                                                                                     [64;1H~                                                                                                                                     [65;1H~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H1,1[11CAll[1;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[1m[36mCFLAGS [m= -g -Wall -std=c11 -fprofile-arcs -ftest-coverage

[1m[36mTARGETS [m=[7Ccoverage

[1m[36mcoverage:[m[7Ccoverage.c

[1m[33m.PHONY:[m[9Cclean
[1m[36mclean:[m
[1m[35m                rm -f [m[1m[36m$(TARGETS)[m[1m[35m *.o *~ *.gcda *.gcno[m

[1m[34m~                                                                                                                                     [12;1H~                                                                                                                                     [13;1H~                                                                                                                                     [14;1H~                                                                                                                                     [15;1H~                                                                                                                                     [16;1H~                                                                                                                                     [17;1H~                                                                                                                                     [18;1H~                                                                                                                                     [19;1H~                                                                                                                                     [20;1H~                                                                                                                                     [21;1H~                                                                                                                                     [22;1H~                                                                                                                                     [23;1H~                                                                                                                                     [24;1H~                                                                                                                                     [25;1H~                                                                                                                                     [26;1H~                                                                                                                                     [27;1H~                                                                                                                                     [28;1H~                                                                                                                                     [29;1H~                                                                                                                                     [30;1H~                                                                                                                                     [31;1H~                                                                                                                                     [32;1H~                                                                                                                                     [33;1H~                                                                                                                                     [34;1H~                                                                                                                                     [35;1H~                                                                                                                                     [36;1H~                                                                                                                                     [37;1H~                                                                                                                                     [38;1H~                                                                                                                                     [39;1H~                                                                                                                                     [40;1H~                                                                                                                                     [41;1H~                                                                                                                                     [42;1H~                                                                                                                                     [43;1H~                                                                                                                                     [44;1H~                                                                                                                                     [45;1H~                                                                                                                                     [46;1H~                                                                                                                                     [47;1H~                                                                                                                                     [48;1H~                                                                                                                                     [49;1H~                                                                                                                                     [50;1H~                                                                                                                                     [51;1H~                                                                                                                                     [52;1H~                                                                                                                                     [53;1H~                                                                                                                                     [54;1H~                                                                                                                                     [55;1H~                                                                                                                                     [56;1H~                                                                                                                                     [57;1H~                                                                                                                                     [58;1H~                                                                                                                                     [59;1H~                                                                                                                                     [60;1H~                                                                                                                                     [61;1H~                                                                                                                                     [62;1H~                                                                                                                                     [63;1H~                                                                                                                                     [64;1H~                                                                                                                                     [65;1H~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H1,1[11CAll"Makefile" 10L, 164C[1;1H[?25h[?25l[71;107H^[[1;1H[71;107H  [1;1H[71;107H^[[1;1H[71;107H  [1;1H[?25h[?25l[71;107H:[1;1H[71;1H[K[71;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"Makefile" 10L, 164C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ ./coverage 200 2000 2999
rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ ls -l
total 48
-rwxr-x--- 1 rgeary1 rgeary1 30784 Nov 12 13:25 coverage
-rw-r----- 1 rgeary1 rgeary1   781 Nov  9 21:07 coverage.c
-rw-r----- 1 rgeary1 rgeary1   300 Nov 12 13:27 coverage.gcda
-rw-r----- 1 rgeary1 rgeary1  1984 Nov 12 13:25 coverage.gcno
-rw-r----- 1 rgeary1 rgeary1   164 Nov 12 13:26 Makefile
rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ gcov coverage.gcda
File 'coverage.c'
Lines executed:12.50% of 24
Creating 'coverage.c.gcov'

rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ vim coverage.c.gcov 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;71r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[71;1H"coverage.c.gcov" 63L, 1864C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:1[5;9H-:    0:Programs:1[6;9H-:    1:#include <stdio.h>[7;9H-:    2:[8;9H-:    3:static int v[] = {[9;9H-:    4:  211,  333, 319, 411, 911, 1001,[10;9H-:    5:};[11;9H-:    6:
    #####:    7:static int compute(int a, int b, int c) {
    #####:    8:  int s = v[2];
    #####:    9:  if (v[0] < a && a < v[1]) {
    #####:   10:    if (b < v[2]) {
    #####:   11:      s += v[2];
    #####:   12:      if (c < v[3]) {
    #####:   13:[8Cs += v[4];[19;9H-:   14:      }[20;9H-:   15:      else {
    #####:   16:[8Cs += v[3];[22;9H-:   17:      }[23;9H-:   18:    }[24;9H-:   19:    else {
    #####:   20:      s += v[1];
    #####:   21:      if (c < v[1]) {
    #####:   22:[8Cs += v[4];[28;9H-:   23:      }[29;9H-:   24:      else {
    #####:   25:[8Cs += v[2];[31;9H-:   26:      }[32;9H-:   27:    }[33;9H-:   28:  }[34;9H-:   29:  else {
    #####:   30:    if (b < v[3]) {
    #####:   31:      if (c < v[4]) {
    #####:   32:[8Cs += v[5];[38;9H-:   33:      }[39;9H-:   34:      else {
    #####:   35:[8Cs += v[1];[41;9H-:   36:      }[42;9H-:   37:    }[43;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[46;9H-:   41:      }[47;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[49;9H-:   44:      }[50;9H-:   45:    }[51;9H-:   46:  }
    #####:   47:  return s;[53;9H-:   48:}[54;9H-:   49:[55;9H-:   50:int[56;9H1:   51:main()[57;9H-:   52:{[58;9H-:   53:  int a, b, c;[59;9H1:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {
    #####:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[61;9H-:   56:  }[62;9H1:   57:  return 0;[63;9H-:   58:}
[1m[34m~                                                                                                                                     [65;1H~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H1,1[11CAll[1;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:1[5;9H-:    0:Programs:1[6;9H-:    1:#include <stdio.h>[7;9H-:    2:[8;9H-:    3:static int v[] = {[9;9H-:    4:  211,  333, 319, 411, 911, 1001,[10;9H-:    5:};[11;9H-:    6:
    #####:    7:static int compute(int a, int b, int c) {
    #####:    8:  int s = v[2];
    #####:    9:  if (v[0] < a && a < v[1]) {
    #####:   10:    if (b < v[2]) {
    #####:   11:      s += v[2];
    #####:   12:      if (c < v[3]) {
    #####:   13:[8Cs += v[4];[19;9H-:   14:      }[20;9H-:   15:      else {
    #####:   16:[8Cs += v[3];[22;9H-:   17:      }[23;9H-:   18:    }[24;9H-:   19:    else {
    #####:   20:      s += v[1];
    #####:   21:      if (c < v[1]) {
    #####:   22:[8Cs += v[4];[28;9H-:   23:      }[29;9H-:   24:      else {
    #####:   25:[8Cs += v[2];[31;9H-:   26:      }[32;9H-:   27:    }[33;9H-:   28:  }[34;9H-:   29:  else {
    #####:   30:    if (b < v[3]) {
    #####:   31:      if (c < v[4]) {
    #####:   32:[8Cs += v[5];[38;9H-:   33:      }[39;9H-:   34:      else {
    #####:   35:[8Cs += v[1];[41;9H-:   36:      }[42;9H-:   37:    }[43;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[46;9H-:   41:      }[47;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[49;9H-:   44:      }[50;9H-:   45:    }[51;9H-:   46:  }
    #####:   47:  return s;[53;9H-:   48:}[54;9H-:   49:[55;9H-:   50:int[56;9H1:   51:main()[57;9H-:   52:{[58;9H-:   53:  int a, b, c;[59;9H1:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {
    #####:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[61;9H-:   56:  }[62;9H1:   57:  return 0;[63;9H-:   58:}
[1m[34m~                                                                                                                                     [65;1H~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H1,1[11CAll"coverage.c.gcov" 63L, 1864C[1;1H[?25h[?25l[71;107H^[[1;1H[71;107H  [1;1H[71;107H^[[1;1H[71;107H  [1;1H[?25h[?25l[71;107H:[1;1H[71;1H[K[71;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"coverage.c.gcov" 63L, 1864C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ vim coverage.c.gcov [K[K[K[K[K[K
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;71r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[71;1H"coverage.c" 58L, 781C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<stdio.h>[m

[32mstatic[m [32mint[m v[] = {
  [31m211[m,  [31m333[m, [31m319[m, [31m411[m, [31m911[m, [31m1001[m,
};

[32mstatic[m [32mint[m compute([32mint[m a, [32mint[m b, [32mint[m c) {
  [32mint[m s = v[[31m2[m];
  [33mif[m (v[[31m0[m] < a && a < v[[31m1[m]) {
    [33mif[m (b < v[[31m2[m]) {[11;7Hs += v[[31m2[m];[12;7H[33mif[m (c < v[[31m3[m]) {[13;9Hs += v[[31m4[m];[14;7H}[15;7H[33melse[m {[16;9Hs += v[[31m3[m];[17;7H}
    }
    [33melse[m {[20;7Hs += v[[31m1[m];[21;7H[33mif[m (c < v[[31m1[m]) {[22;9Hs += v[[31m4[m];[23;7H}[24;7H[33melse[m {[25;9Hs += v[[31m2[m];[26;7H}
    }
  }
  [33melse[m {
    [33mif[m (b < v[[31m3[m]) {[31;7H[33mif[m (c < v[[31m4[m]) {[32;9Hs += v[[31m5[m];[33;7H}[34;7H[33melse[m {[35;9Hs += v[[31m1[m];[36;7H}
    }
    [33melse[m {[39;7H[33mif[m (c < v[[31m2[m]) {[40;9Hs += v[[31m1[m];[41;7H}[42;7H[33melse[m {[43;9Hs += v[[31m3[m];[44;7H}
    }
  }
  [33mreturn[m s;
}

[32mint[m
main()
{
  [32mint[m a, b, c;
  [33mwhile[m (scanf([31m"[m[35m%d[m[31m [m[35m%d[m[31m [m[35m%d[m[31m"[m, &a, &b, &c) == [31m3[m) {
    printf([31m"compute([m[35m%d[m[31m, [m[35m%d[m[31m, [m[35m%d[m[31m) = [m[35m%d\n[m[31m"[m, a, b, c, compute(a, b, c));
  }
  [33mreturn[m [31m0[m;
}
[1m[34m~                                                                                                                                     [60;1H~                                                                                                                                     [61;1H~                                                                                                                                     [62;1H~                                                                                                                                     [63;1H~                                                                                                                                     [64;1H~                                                                                                                                     [65;1H~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H1,1[11CAll[1;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[1m[34m#include [m[1m[35m<stdio.h>[m

[1m[32mstatic[m [1m[32mint[m v[] = {
  [1m[35m211[m,  [1m[35m333[m, [1m[35m319[m, [1m[35m411[m, [1m[35m911[m, [1m[35m1001[m,
};

[1m[32mstatic[m [1m[32mint[m compute([1m[32mint[m a, [1m[32mint[m b, [1m[32mint[m c) {
  [1m[32mint[m s = v[[1m[35m2[m];
  [1m[33mif[m (v[[1m[35m0[m] < a && a < v[[1m[35m1[m]) {
    [1m[33mif[m (b < v[[1m[35m2[m]) {[11;7Hs += v[[1m[35m2[m];[12;7H[1m[33mif[m (c < v[[1m[35m3[m]) {[13;9Hs += v[[1m[35m4[m];[14;7H}[15;7H[1m[33melse[m {[16;9Hs += v[[1m[35m3[m];[17;7H}
    }
    [1m[33melse[m {[20;7Hs += v[[1m[35m1[m];[21;7H[1m[33mif[m (c < v[[1m[35m1[m]) {[22;9Hs += v[[1m[35m4[m];[23;7H}[24;7H[1m[33melse[m {[25;9Hs += v[[1m[35m2[m];[26;7H}
    }
  }
  [1m[33melse[m {
    [1m[33mif[m (b < v[[1m[35m3[m]) {[31;7H[1m[33mif[m (c < v[[1m[35m4[m]) {[32;9Hs += v[[1m[35m5[m];[33;7H}[34;7H[1m[33melse[m {[35;9Hs += v[[1m[35m1[m];[36;7H}
    }
    [1m[33melse[m {[39;7H[1m[33mif[m (c < v[[1m[35m2[m]) {[40;9Hs += v[[1m[35m1[m];[41;7H}[42;7H[1m[33melse[m {[43;9Hs += v[[1m[35m3[m];[44;7H}
    }
  }
  [1m[33mreturn[m s;
}

[1m[32mint[m
main()
{
  [1m[32mint[m a, b, c;
  [1m[33mwhile[m (scanf([1m[35m"[m[1m[31m%d[m[1m[35m [m[1m[31m%d[m[1m[35m [m[1m[31m%d[m[1m[35m"[m, &a, &b, &c) == [1m[35m3[m) {
    printf([1m[35m"compute([m[1m[31m%d[m[1m[35m, [m[1m[31m%d[m[1m[35m, [m[1m[31m%d[m[1m[35m) = [m[1m[31m%d\n[m[1m[35m"[m, a, b, c, compute(a, b, c));
  }
  [1m[33mreturn[m [1m[35m0[m;
}
[1m[34m~                                                                                                                                     [60;1H~                                                                                                                                     [61;1H~                                                                                                                                     [62;1H~                                                                                                                                     [63;1H~                                                                                                                                     [64;1H~                                                                                                                                     [65;1H~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H1,1[11CAll"coverage.c" 58L, 781C[1;1H[?25h[?25l[71;117H8,15[8;15H[?25h[?25l[71;107Hi[8;15H[71;107H [8;15H[71;1H[1m-- INSERT --[m[71;14H[K[71;117H8,15[10CAll[8;15H[?25h[?25l[71;120H6[8;16H[?25h[?25l[71;120H7[8;17H[?25h[?25l[71;120H8-25[8;25H[?25h[?25l[71;120H9-33[8;33H[?25h[?25l/[71;119H20-34[8;34H[?25h[?25l[1m[36m//[m[71;120H1-35[8;35H[?25h[?25l[1m[36ms[m[71;120H2-36[8;36H[?25h[?25l[1m[36m [m[71;120H3-37[8;37H[?25h[?25l[1m[36m=[m[71;120H4-38[8;38H[?25h[?25l[1m[36m [m[71;120H5-39[8;39H[?25h[?25l[1m[36mv[m[71;120H6-40[8;40H[?25h[?25l[1m[36m[[m[71;120H7-41[8;41H[?25h[?25l[1m[35m2[m[71;120H8-42[8;42H[?25h[?25l[1m[36m][m[1m[36m[46m[[m[1m[35m2[m[1m[36m[46m][m[71;120H9-43[8;43H[?25h[?25l[1m[36m [[m[1m[35m2[m[1m[36m] [m[71;119H30-44[8;44H[?25h[?25l[1m[36m=[m[71;120H1-45[8;45H[?25h[?25l[1m[36m [m[71;120H2-46[8;46H[?25h[?25l[1m[35m3[m[71;120H3-47[8;47H[?25h[?25l[1m[35m1[m[71;120H4-48[8;48H[?25h[?25l[1m[35m9[m[71;120H5-49[8;49H[?25h[?25l[1m[36m,[m[71;120H6-50[8;50H[?25h[?25l[1m[35m4[m[71;120H7-51[8;51H[?25h[?25l[1m[35m1[m[71;120H8-52[8;52H[?25h[?25l[1m[35m1[m[71;120H9-53[8;53H[?25h[?25l[1m[36m,[m[71;119H40-54[8;54H[?25h[?25l[1m[35m9[m[71;120H1-55[8;55H[?25h[?25l[1m[35m1[m[71;120H2-56[8;56H[?25h[?25l[1m[35m1[m[71;120H3-57[8;57H[?25h[?25l[1m[36m,[m[71;120H4-58[8;58H[?25h[?25l[1m[35m1[m[71;120H5-59[8;59H[?25h[?25l[1m[35m0[m[71;120H6-60[8;60H[?25h[?25l[1m[35m0[m[71;120H7-61[8;61H[?25h[?25l[1m[35m1[m[71;120H8-62[8;62H[?25h[?25l[9;29H[46m{[28;3H}[m[71;117H9,30   [9;30H[?25h[?25l{[28;3H}[71;120H1[9;31H[?25h[?25l[71;120H2-33[9;33H[?25h[?25l\[71;120H3-34[9;34H[?25h[?25l\[71;120H4-35[9;35H[?25h[?25l[9;34H[K[71;120H3-34[9;34H[?25h[?25l[9;33H[K[71;120H2-33[9;33H[?25h[?25l/[71;120H3-34[9;34H[?25h[?25l[1m[36m//[m[71;120H4-35[9;35H[?25h[?25l[1m[36ma[m[71;120H5-36[9;36H[?25h[?25l[9;35H[K[71;120H4-35[9;35H[?25h[?25l[1m[36m [m[71;120H5-36[9;36H[?25h[?25l[9;35H[K[71;120H4-35[9;35H[?25h[?25l[1m[35m2[m[71;120H5-36[9;36H[?25h[?25l[1m[35m1[m[71;120H6-37[9;37H[?25h[?25l[1m[35m1[m[71;120H7-38[9;38H[?25h[?25l[1m[36m [m[71;120H8-39[9;39H[?25h[?25l[1m[36m<[m[71;120H9-40[9;40H[?25h[?25l[1m[36m [m[71;119H40-41[9;41H[?25h[?25l[1m[36ma[m[71;120H1-42[9;42H[?25h[?25l[1m[36m [m[71;120H2-43[9;43H[?25h[?25l[1m[36m<[m[71;120H3-44[9;44H[?25h[?25l[1m[35m3[m[71;120H4-45[9;45H[?25h[?25l[1m[35m3[m[71;120H5-46[9;46H[?25h[?25l[1m[35m3[m[71;120H6-47[9;47H[?25h[?25l[71;120H5-46[9;46H[?25h[?25l[71;120H4-45[9;45H[?25h[?25l[71;120H3-44[9;44H[?25h[?25l[1m[36m [m[1m[35m333[m[71;120H4-45[9;45H[?25h[?25l[71;117H10,21  [10;21H[?25h[?25l[71;121H2-25[10;25H[?25h[?25l[71;121H3-33[10;33H[?25h[?25l[71;121H4-41[10;41H[?25h[?25l[71;121H3-33[10;33H[?25h[?25l/[71;121H4-34[10;34H[?25h[?25l[1m[36m//[m[71;121H5-35[10;35H[?25h[?25l[1m[36m [m[71;121H6-36[10;36H[?25h[?25l[1m[36mb[m[71;121H7-37[10;37H[?25h[?25l[1m[36m [m[71;121H8-38[10;38H[?25h[?25l[1m[36m<[m[71;121H9-39[10;39H[?25h[?25l[1m[36m [m[71;120H30-40[10;40H[?25h[?25l[1m[35m3[m[71;121H1-41[10;41H[?25h[?25l[1m[35m1[m[71;121H2-42[10;42H[?25h[?25l[1m[35m9[m[71;121H3-43[10;43H[?25h[?25l[71;118H1,17   [11;17H[?25h[?25l[71;121H8-25[11;25H[?25h[?25l[71;121H9-33[11;33H[?25h[?25l/[71;120H20-34[11;34H[?25h[?25l[1m[36m//[m[71;121H1-35[11;35H[?25h[?25l[1m[36m [m[71;121H2-36[11;36H[?25h[?25l[1m[35m3[m[71;121H3-37[11;37H[?25h[?25l[1m[35m1[m[71;121H4-38[11;38H[?25h[?25l[1m[35m9[m[71;121H5-39[11;39H[?25h[?25l[1m[36m [m[71;121H6-40[11;40H[?25h[?25l[1m[36m+[m[71;121H7-41[11;41H[?25h[?25l[1m[36m+[m[71;121H8-42[11;42H[?25h[?25l[11;41H[K[71;121H7-41[11;41H[?25h[?25l[1m[36m=[m[71;121H8-42[11;42H[?25h[?25l[1m[36m [m[71;121H9-43[11;43H[?25h[?25l[1m[35m3[m[71;120H30-44[11;44H[?25h[?25l[1m[35m1[m[71;121H1-45[11;45H[?25h[?25l[1m[35m8[m[71;121H2-46[11;46H[?25h[?25l[11;45H[K[71;121H1-45[11;45H[?25h[?25l[1m[35m9[m[71;121H2-46[11;46H[?25h[?25l[12;21H[46m{[14;7H}[m[71;118H2,22   [12;22H[?25h[?25l{[14;7H}[71;121H3-25[12;25H[?25h[?25l[71;121H4-33[12;33H[?25h[?25l/[71;121H5-34[12;34H[?25h[?25l[1m[36m//[m[71;121H6-35[12;35H[?25h[?25l[1m[36mc[m[71;121H7-36[12;36H[?25h[?25l[1m[36m [m[71;121H8-37[12;37H[?25h[?25l[1m[36m<[m[71;121H9-38[12;38H[?25h[?25l[1m[36m [m[71;120H30-39[12;39H[?25h[?25l[1m[35m4[m[71;121H1-40[12;40H[?25h[?25l[1m[35m1[m[71;121H2-41[12;41H[?25h[?25l[1m[35m1[m[71;121H3-42[12;42H[?25h[?25l[71;118H3,12-19[13;19H[?25h[?25l[71;121H3-25[13;25H[?25h[?25l[71;121H4-33[13;33H[?25h[?25l/[71;121H5-34[13;34H[?25h[?25l[1m[36m//[m[71;121H6-35[13;35H[?25h[?25l[1m[36m [m[71;121H7-36[13;36H[?25h[?25l[1m[36ms [m[71;121H9-38[13;38H[?25h[?25l[1m[36m+[m[71;120H20-39[13;39H[?25h[?25l[71;118H2,3[12;39H[?25h[?25l[71;120H29-38[12;38H[?25h[?25l[71;118H1,24[11;38H[?25h[?25l[71;121H5-39[11;39H[?25h[?25l[1m[36m += [m[1m[35m319[m[11;45H[K[71;121H4-38[11;38H[?25h[?25l[1m[36m += [m[1m[35m319[m[11;44H[K[71;121H3-37[11;37H[?25h[?25l[1m[36m += [m[1m[35m319[m[11;43H[K[71;121H2-36[11;36H[?25h[?25l[1m[36ms += [m[1m[35m319[m[71;121H3-37[11;37H[?25h[?25l[1m[36m[ += [m[1m[35m319[m[71;121H4-38[11;38H[?25h[?25l[1m[35m1[m[1m[36m += [m[1m[35m319[m[71;121H5-39[11;39H[?25h[?25l[1m[36m] += [m[1m[35m319[m[11;37H[1m[36m[46m[[m[1m[35m1[m[1m[36m[46m][m[1m[36m += [m[1m[35m319[m[71;121H6-40[11;40H[?25h[?25l[1m[36m[[m[1m[35m1[m[1m[36m] += [m[1m[35m319[m[71;118H2,31[12;40H[?25h[?25l[71;118H3,20-39[13;39H[?25h[?25l[71;120H19-38[13;38H[?25h[?25l[71;121H8-37[13;37H[?25h[?25l[1m[36m[ +[m[71;121H9-38[13;38H[?25h[?25l[1m[36m] +[m[1m[36m[46m[][m[1m[36m +[m[71;120H20-39[13;39H[?25h[?25l[1m[36m[46m [m[1m[36m+[m[13;40H[K[13;37H[1m[36m[ +[m[71;120H19-38[13;38H[?25h[?25l[1m[35m1[m[1m[36m +[m[71;120H20-39[13;39H[?25h[?25l[1m[36m] +[m[1m[36m[46m[[m[1m[35m1[m[1m[36m[46m][m[1m[36m +[m[71;121H1-40[13;40H[?25h[?25l[1m[36m[[m[1m[35m1[m[1m[36m] +[m[71;121H2-41[13;41H[?25h[?25l[71;121H3-42[13;42H[?25h[?25l[71;121H2-41[13;41H[?25h[?25l[1m[36m[46m[[m[1m[35m1[m[1m[36m[46m][m[1m[36m +[m[71;121H1-40[13;40H[?25h[?25l[71;121H0-39[13;39H[?25h[?25l[1m[36m][m[1m[36m[46m [m[1m[36m+[m[13;41H[K[13;38H[1m[36m[46m][m[1m[36m +[m[71;120H19-38[13;38H[?25h[?25l[1m[35m[46m0[m[1m[36m] +[m[1m[35m0[m[1m[36m[46m][m[1m[36m +[m[71;120H20-39[13;39H[?25h[?25l[1m[36m[[m[1m[35m0[m[1m[36m] +[m[71;118H2,3[12;39H[?25h[?25l[11;37H[1m[36m[46m[[m[1m[35m1[m[1m[36m[46m][m[1m[36m += [m[1m[35m319[m[71;118H1,25[11;39H[?25h[?25l[1m[36m][m[1m[36m[46m [m[1m[36m+= [m[1m[35m319[m[11;46H[K[11;38H[1m[36m[46m][m[1m[36m += [m[1m[35m319[m[71;121H4-38[11;38H[?25h[?25l[1m[35m[46m0[m[1m[36m] += [m[1m[35m319[11;38H0[m[1m[36m[46m][m[1m[36m += [m[1m[35m319[m[71;121H5-39[11;39H[?25h[?25l[1m[36m[[m[1m[35m0[m[1m[36m] += [m[1m[35m319[m[71;118H3,23-42[13;42H[?25h[?25l[1m[36m [m[71;121H4-43[13;43H[?25h[?25l[71;121H3-42[13;42H[?25h[?25l[1m[36m= [m[71;121H4-43[13;43H[?25h[?25l[1C[1m[36m [m[71;121H5-44[13;44H[?25h[?25l[1m[35m9[m[1m[36m [m[71;121H6-45[13;45H[?25h[?25l[1m[35m1[m[1m[36m [m[71;121H7-46[13;46H[?25h[?25l[1m[35m1[m[1m[36m [m[71;121H8-47[13;47H[?25h[71;1H[K[13;46H[?25l[71;107H^[[13;46H[71;107H  [13;47H[71;117H13,27-46      All[13;46H[?25h[?25l[71;107H:[13;46H[71;107H[K[71;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"coverage.c" 58L, 886C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ vim coverage.c.gcov [2Pgcov coverage.gcdals -l[K./coverage 200 2000 2999[K[K[K[K[K[K[K[K[K[K[K[K[K250 300 50
rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ ./coverage 250 300 50[7Pvim coverage.c.gcov [2Pgcov coverage.gcda
coverage.c:source file is newer than notes file 'coverage.gcno'
(the message is displayed only once per source file)
File 'coverage.c'
Lines executed:12.50% of 24
Creating 'coverage.c.gcov'

rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ gcov coverage.gcda./coverage 250 300 50[7Pvim coverage.c.gcov 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;71r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[71;1H"coverage.c.gcov" 64L, 2012C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:2[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:
    #####:    7:static int compute(int a, int b, int c) {
    #####:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001
    #####:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333
    #####:   10:    if (b < v[2]) {[13C// b < 319
    #####:   11:      s += v[2];[16C// s[0] += 319
    #####:   12:      if (c < v[3]) {[11C//c < 411
    #####:   13:[8Cs += v[4];[14C// s[0] += 911[20;9H-:   14:      }[21;9H-:   15:      else {
    #####:   16:[8Cs += v[3];[23;9H-:   17:      }[24;9H-:   18:    }[25;9H-:   19:    else {
    #####:   20:      s += v[1];
    #####:   21:      if (c < v[1]) {
    #####:   22:[8Cs += v[4];[29;9H-:   23:      }[30;9H-:   24:      else {
    #####:   25:[8Cs += v[2];[32;9H-:   26:      }[33;9H-:   27:    }[34;9H-:   28:  }[35;9H-:   29:  else {
    #####:   30:    if (b < v[3]) {
    #####:   31:      if (c < v[4]) {
    #####:   32:[8Cs += v[5];[39;9H-:   33:      }[40;9H-:   34:      else {
    #####:   35:[8Cs += v[1];[42;9H-:   36:      }[43;9H-:   37:    }[44;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[47;9H-:   41:      }[48;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[50;9H-:   44:      }[51;9H-:   45:    }[52;9H-:   46:  }
    #####:   47:  return s;[54;9H-:   48:}[55;9H-:   49:[56;9H-:   50:int[57;9H2:   51:main()[58;9H-:   52:{[59;9H-:   53:  int a, b, c;[60;9H2:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {
    #####:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[62;9H-:   56:  }[63;9H2:   57:  return 0;[64;9H-:   58:}
[1m[34m~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H1,1[11CAll[1;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:2[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:
    #####:    7:static int compute(int a, int b, int c) {
    #####:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001
    #####:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333
    #####:   10:    if (b < v[2]) {[13C// b < 319
    #####:   11:      s += v[2];[16C// s[0] += 319
    #####:   12:      if (c < v[3]) {[11C//c < 411
    #####:   13:[8Cs += v[4];[14C// s[0] += 911[20;9H-:   14:      }[21;9H-:   15:      else {
    #####:   16:[8Cs += v[3];[23;9H-:   17:      }[24;9H-:   18:    }[25;9H-:   19:    else {
    #####:   20:      s += v[1];
    #####:   21:      if (c < v[1]) {
    #####:   22:[8Cs += v[4];[29;9H-:   23:      }[30;9H-:   24:      else {
    #####:   25:[8Cs += v[2];[32;9H-:   26:      }[33;9H-:   27:    }[34;9H-:   28:  }[35;9H-:   29:  else {
    #####:   30:    if (b < v[3]) {
    #####:   31:      if (c < v[4]) {
    #####:   32:[8Cs += v[5];[39;9H-:   33:      }[40;9H-:   34:      else {
    #####:   35:[8Cs += v[1];[42;9H-:   36:      }[43;9H-:   37:    }[44;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[47;9H-:   41:      }[48;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[50;9H-:   44:      }[51;9H-:   45:    }[52;9H-:   46:  }
    #####:   47:  return s;[54;9H-:   48:}[55;9H-:   49:[56;9H-:   50:int[57;9H2:   51:main()[58;9H-:   52:{[59;9H-:   53:  int a, b, c;[60;9H2:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {
    #####:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[62;9H-:   56:  }[63;9H2:   57:  return 0;[64;9H-:   58:}
[1m[34m~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H1,1[11CAll"coverage.c.gcov" 64L, 2012C[1;1H[?25h[?25l[71;107H:[1;1H[71;1H[K[71;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"coverage.c.gcov" 64L, 2012C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ vim coverage.c.gcov [2Pgcov coverage.gcda./coverage 250 300 50 | gcov -a coverage.c
coverage.c:source file is newer than notes file 'coverage.gcno'
(the message is displayed only once per source file)
File 'coverage.c'
Lines executed:12.50% of 24
Creating 'coverage.c.gcov'

rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ vim ./coverage 250 300 50 | gcov -a coverage.c[22Pvim coverage.c.gcov [2Pgcov coverage.gcdavim coverage.c.gcov 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;71r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[71;1H"coverage.c.gcov" 86L, 2562C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:2[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:
    #####:    7:static int compute(int a, int b, int c) {
    #####:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001
    #####:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333
    %%%%%:    9-block  0
    %%%%%:    9-block  1
    #####:   10:    if (b < v[2]) {[13C// b < 319
    %%%%%:   10-block  0
    %%%%%:   10-block  1
    #####:   11:      s += v[2];[16C// s[0] += 319
    #####:   12:      if (c < v[3]) {[11C//c < 411
    %%%%%:   12-block  0
    #####:   13:[8Cs += v[4];[14C// s[0] += 911
    %%%%%:   13-block  0[26;9H-:   14:      }[27;9H-:   15:      else {
    #####:   16:[8Cs += v[3];
    %%%%%:   16-block  0[30;9H-:   17:      }[31;9H-:   18:    }[32;9H-:   19:    else {
    #####:   20:      s += v[1];
    #####:   21:      if (c < v[1]) {
    %%%%%:   21-block  0
    #####:   22:[8Cs += v[4];
    %%%%%:   22-block  0[38;9H-:   23:      }[39;9H-:   24:      else {
    #####:   25:[8Cs += v[2];
    %%%%%:   25-block  0[42;9H-:   26:      }[43;9H-:   27:    }[44;9H-:   28:  }[45;9H-:   29:  else {
    #####:   30:    if (b < v[3]) {
    %%%%%:   30-block  0
    #####:   31:      if (c < v[4]) {
    %%%%%:   31-block  0
    #####:   32:[8Cs += v[5];
    %%%%%:   32-block  0[52;9H-:   33:      }[53;9H-:   34:      else {
    #####:   35:[8Cs += v[1];
    %%%%%:   35-block  0[56;9H-:   36:      }[57;9H-:   37:    }[58;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    %%%%%:   39-block  0
    #####:   40:[8Cs += v[1];
    %%%%%:   40-block  0[63;9H-:   41:      }[64;9H-:   42:      else {
    #####:   43:[8Cs += v[3];
    %%%%%:   43-block  0[67;9H-:   44:      }[68;9H-:   45:    }[69;9H-:   46:  }
    #####:   47:  return s;[71;117H1,1[11CTop[1;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:2[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:
    #####:    7:static int compute(int a, int b, int c) {
    #####:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001
    #####:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333
    %%%%%:    9-block  0
    %%%%%:    9-block  1
    #####:   10:    if (b < v[2]) {[13C// b < 319
    %%%%%:   10-block  0
    %%%%%:   10-block  1
    #####:   11:      s += v[2];[16C// s[0] += 319
    #####:   12:      if (c < v[3]) {[11C//c < 411
    %%%%%:   12-block  0
    #####:   13:[8Cs += v[4];[14C// s[0] += 911
    %%%%%:   13-block  0[26;9H-:   14:      }[27;9H-:   15:      else {
    #####:   16:[8Cs += v[3];
    %%%%%:   16-block  0[30;9H-:   17:      }[31;9H-:   18:    }[32;9H-:   19:    else {
    #####:   20:      s += v[1];
    #####:   21:      if (c < v[1]) {
    %%%%%:   21-block  0
    #####:   22:[8Cs += v[4];
    %%%%%:   22-block  0[38;9H-:   23:      }[39;9H-:   24:      else {
    #####:   25:[8Cs += v[2];
    %%%%%:   25-block  0[42;9H-:   26:      }[43;9H-:   27:    }[44;9H-:   28:  }[45;9H-:   29:  else {
    #####:   30:    if (b < v[3]) {
    %%%%%:   30-block  0
    #####:   31:      if (c < v[4]) {
    %%%%%:   31-block  0
    #####:   32:[8Cs += v[5];
    %%%%%:   32-block  0[52;9H-:   33:      }[53;9H-:   34:      else {
    #####:   35:[8Cs += v[1];
    %%%%%:   35-block  0[56;9H-:   36:      }[57;9H-:   37:    }[58;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    %%%%%:   39-block  0
    #####:   40:[8Cs += v[1];
    %%%%%:   40-block  0[63;9H-:   41:      }[64;9H-:   42:      else {
    #####:   43:[8Cs += v[3];
    %%%%%:   43-block  0[67;9H-:   44:      }[68;9H-:   45:    }[69;9H-:   46:  }
    #####:   47:  return s;[71;117H1,1[11CTop"coverage.c.gcov" 86L, 2562C[1;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;5H%%%%%:   47-block  0[69;9H-:   48:}[70;9H-:   49:[71;1H[K[71;117H9,1[11C18%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;9H-:   50:int[69;9H2:   51:main()[70;9H-:   52:{[71;117H[K[71;117H12,1[10C37%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;9H-:   53:  int a, b, c;[69;9H2:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {[70;9H2:   54-block  0[71;117H[K[71;117H15,1[10C56%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;9H2:   54-block  1
    #####:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));
    %%%%%:   55-block  0[71;117H[K[71;117H18,1[10C75%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;9H-:   56:  }[69;9H2:   57:  return 0;[70;9H2:   57-block  0[71;117H[K[71;117H21,1[10C93%[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;9H-:   58:}
[1m[34m~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H[K[71;117H24,1[10CBot[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H[1m[34m~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H[K[71;117H27,1[10CBot[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H[1m[34m~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H[K[71;117H30,1[10CBot[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H[1m[34m~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H[K[71;117H33,1[10CBot[6;1H[?25h[?25l[1;70r[1;1H[3M[1;71r[68;1H[1m[34m~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H[K[71;117H36,1[10CBot[6;1H[?25h[?25l[1;70r[1;1H[3L[1;71r[1;5H#####:   16:[8Cs += v[3];
    %%%%%:   16-block  0[3;9H-:   17:      }[71;117H[K[71;117H36,1[10CBot[9;1H[?25h[?25l[1;70r[1;1H[3L[1;71r[1;5H%%%%%:   13-block  0[2;9H-:   14:      }[3;9H-:   15:      else {[71;117H[K[71;117H36,1[10CBot[12;1H[?25h[?25l[1;70r[1;1H[3L[1;71r[1;5H#####:   12:      if (c < v[3]) {[11C//c < 411
    %%%%%:   12-block  0
    #####:   13:[8Cs += v[4];[14C// s[0] += 911[71;117H[K[71;117H36,1[10CBot[15;1H[?25h[?25l[1;70r[1;1H[3L[1;71r[1;5H%%%%%:   10-block  0
    %%%%%:   10-block  1
    #####:   11:      s += v[2];[16C// s[0] += 319[71;117H[K[71;117H36,1[10CBot[18;1H[?25h[?25l[1;70r[1;1H[3L[1;71r[1;5H%%%%%:    9-block  0
    %%%%%:    9-block  1
    #####:   10:    if (b < v[2]) {[13C// b < 319[71;117H[K[71;117H36,1[10C93%[21;1H[?25h[?25l[1;70r[1;1H[3L[1;71r[1;5H#####:    7:static int compute(int a, int b, int c) {
    #####:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001
    #####:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333[71;117H[K[71;117H36,1[10C75%[24;1H[?25h[?25l[1;70r[1;1H[3L[1;71r[1;9H-:    4:  211,  333, 319, 411, 911, 1001,[2;9H-:    5:};[3;9H-:    6:[71;117H[K[71;117H36,1[10C56%[27;1H[?25h[?25l[1;70r[1;1H[3L[1;71r[1;9H-:    1:#include <stdio.h>[2;9H-:    2:[3;9H-:    3:static int v[] = {[71;117H[K[71;117H36,1[10C37%[30;1H[?25h[?25l[1;70r[1;1H[3L[1;71r[1;9H-:    0:Runs:2[2;9H-:    0:Programs:1[3;9H-:    0:Source is newer than graph[71;117H[K[71;117H36,1[10C18%[33;1H[?25h[?25l[1;70r[1;1H[3L[1;71r[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[71;117H[K[71;117H36,1[10CTop[36;1H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[1;70r[1;1H[3M[1;71r[68;5H%%%%%:   47-block  0[69;9H-:   48:}[70;9H-:   49:[71;117H[K[71;117H36,1[10C18%[33;1H[?25h[?25l[71;107H:[33;1H[71;107H[K[71;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"coverage.c.gcov" 86L, 2562C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ vim coverage.c.gcov ./coverage 250 300 50 | gcov -a coverage.c[22Pvim coverage.c.gcov [2Pgcov coverage.gcda./coverage 250 300 50[3Pgcov coverage.gcdavim coverage.c.gcov ./coverage 250 300 50 | gcov -a coverage.c[22Pvim coverage.c.gcov ./coverage 250 300 50 | gcov -a coverage.c[22Pvim coverage.c.gcov [Kvim coverage.c.gcov ./coverage 250 300 50 | gcov -a coverage.c[22Pvim coverage.c.gcov [2Pgcov coverage.gcda./coverage 250 300 50
rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ ./coverage 250 300 50[1Pvim coverage.c.gcov ./coverage 250 300 50 | gcov -a coverage.c[22Pvim coverage.c.gcov [2Pgcov coverage.gcda
coverage.c:source file is newer than notes file 'coverage.gcno'
(the message is displayed only once per source file)
File 'coverage.c'
Lines executed:12.50% of 24
Creating 'coverage.c.gcov'

rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ gcov coverage.gcda./coverage 250 300 50[1Pvim coverage.c.gcov 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;71r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[71;1H"coverage.c.gcov" 64L, 2012C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:4[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:
    #####:    7:static int compute(int a, int b, int c) {
    #####:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001
    #####:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333
    #####:   10:    if (b < v[2]) {[13C// b < 319
    #####:   11:      s += v[2];[16C// s[0] += 319
    #####:   12:      if (c < v[3]) {[11C//c < 411
    #####:   13:[8Cs += v[4];[14C// s[0] += 911[20;9H-:   14:      }[21;9H-:   15:      else {
    #####:   16:[8Cs += v[3];[23;9H-:   17:      }[24;9H-:   18:    }[25;9H-:   19:    else {
    #####:   20:      s += v[1];
    #####:   21:      if (c < v[1]) {
    #####:   22:[8Cs += v[4];[29;9H-:   23:      }[30;9H-:   24:      else {
    #####:   25:[8Cs += v[2];[32;9H-:   26:      }[33;9H-:   27:    }[34;9H-:   28:  }[35;9H-:   29:  else {
    #####:   30:    if (b < v[3]) {
    #####:   31:      if (c < v[4]) {
    #####:   32:[8Cs += v[5];[39;9H-:   33:      }[40;9H-:   34:      else {
    #####:   35:[8Cs += v[1];[42;9H-:   36:      }[43;9H-:   37:    }[44;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[47;9H-:   41:      }[48;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[50;9H-:   44:      }[51;9H-:   45:    }[52;9H-:   46:  }
    #####:   47:  return s;[54;9H-:   48:}[55;9H-:   49:[56;9H-:   50:int[57;9H4:   51:main()[58;9H-:   52:{[59;9H-:   53:  int a, b, c;[60;9H4:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {
    #####:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[62;9H-:   56:  }[63;9H4:   57:  return 0;[64;9H-:   58:}
[1m[34m~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H36,1[10CAll[36;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:4[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:
    #####:    7:static int compute(int a, int b, int c) {
    #####:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001
    #####:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333
    #####:   10:    if (b < v[2]) {[13C// b < 319
    #####:   11:      s += v[2];[16C// s[0] += 319
    #####:   12:      if (c < v[3]) {[11C//c < 411
    #####:   13:[8Cs += v[4];[14C// s[0] += 911[20;9H-:   14:      }[21;9H-:   15:      else {
    #####:   16:[8Cs += v[3];[23;9H-:   17:      }[24;9H-:   18:    }[25;9H-:   19:    else {
    #####:   20:      s += v[1];
    #####:   21:      if (c < v[1]) {
    #####:   22:[8Cs += v[4];[29;9H-:   23:      }[30;9H-:   24:      else {
    #####:   25:[8Cs += v[2];[32;9H-:   26:      }[33;9H-:   27:    }[34;9H-:   28:  }[35;9H-:   29:  else {
    #####:   30:    if (b < v[3]) {
    #####:   31:      if (c < v[4]) {
    #####:   32:[8Cs += v[5];[39;9H-:   33:      }[40;9H-:   34:      else {
    #####:   35:[8Cs += v[1];[42;9H-:   36:      }[43;9H-:   37:    }[44;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[47;9H-:   41:      }[48;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[50;9H-:   44:      }[51;9H-:   45:    }[52;9H-:   46:  }
    #####:   47:  return s;[54;9H-:   48:}[55;9H-:   49:[56;9H-:   50:int[57;9H4:   51:main()[58;9H-:   52:{[59;9H-:   53:  int a, b, c;[60;9H4:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {
    #####:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[62;9H-:   56:  }[63;9H4:   57:  return 0;[64;9H-:   58:}
[1m[34m~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H36,1[10CAll"coverage.c.gcov" 64L, 2012C[36;1H[?25h[?25l[71;107H~@k[36;1H[71;107H   [35;1H[71;118H5[35;1H[?25h[?25l[71;107H:[35;1H[71;1H[K[71;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"coverage.c.gcov" 64L, 2012C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ vim coverage.c.gcov [2Pgcov coverage.gcda./coverage 250 300 50[K[K1000
rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ ./coverage 250 300 1000[3Pvim coverage.c.gcov [2Pgcov coverage.gcda
coverage.c:source file is newer than notes file 'coverage.gcno'
(the message is displayed only once per source file)
File 'coverage.c'
Lines executed:12.50% of 24
Creating 'coverage.c.gcov'

rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ gcov coverage.gcda./coverage 250 300 1000[3Pvim coverage.c.gcov 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;71r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[71;1H"coverage.c.gcov" 64L, 2012C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:5[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:
    #####:    7:static int compute(int a, int b, int c) {
    #####:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001
    #####:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333
    #####:   10:    if (b < v[2]) {[13C// b < 319
    #####:   11:      s += v[2];[16C// s[0] += 319
    #####:   12:      if (c < v[3]) {[11C//c < 411
    #####:   13:[8Cs += v[4];[14C// s[0] += 911[20;9H-:   14:      }[21;9H-:   15:      else {
    #####:   16:[8Cs += v[3];[23;9H-:   17:      }[24;9H-:   18:    }[25;9H-:   19:    else {
    #####:   20:      s += v[1];
    #####:   21:      if (c < v[1]) {
    #####:   22:[8Cs += v[4];[29;9H-:   23:      }[30;9H-:   24:      else {
    #####:   25:[8Cs += v[2];[32;9H-:   26:      }[33;9H-:   27:    }[34;9H-:   28:  }[35;9H-:   29:  else {
    #####:   30:    if (b < v[3]) {
    #####:   31:      if (c < v[4]) {
    #####:   32:[8Cs += v[5];[39;9H-:   33:      }[40;9H-:   34:      else {
    #####:   35:[8Cs += v[1];[42;9H-:   36:      }[43;9H-:   37:    }[44;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[47;9H-:   41:      }[48;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[50;9H-:   44:      }[51;9H-:   45:    }[52;9H-:   46:  }
    #####:   47:  return s;[54;9H-:   48:}[55;9H-:   49:[56;9H-:   50:int[57;9H5:   51:main()[58;9H-:   52:{[59;9H-:   53:  int a, b, c;[60;9H5:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {
    #####:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[62;9H-:   56:  }[63;9H5:   57:  return 0;[64;9H-:   58:}
[1m[34m~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H35,1[10CAll[35;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:5[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:
    #####:    7:static int compute(int a, int b, int c) {
    #####:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001
    #####:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333
    #####:   10:    if (b < v[2]) {[13C// b < 319
    #####:   11:      s += v[2];[16C// s[0] += 319
    #####:   12:      if (c < v[3]) {[11C//c < 411
    #####:   13:[8Cs += v[4];[14C// s[0] += 911[20;9H-:   14:      }[21;9H-:   15:      else {
    #####:   16:[8Cs += v[3];[23;9H-:   17:      }[24;9H-:   18:    }[25;9H-:   19:    else {
    #####:   20:      s += v[1];
    #####:   21:      if (c < v[1]) {
    #####:   22:[8Cs += v[4];[29;9H-:   23:      }[30;9H-:   24:      else {
    #####:   25:[8Cs += v[2];[32;9H-:   26:      }[33;9H-:   27:    }[34;9H-:   28:  }[35;9H-:   29:  else {
    #####:   30:    if (b < v[3]) {
    #####:   31:      if (c < v[4]) {
    #####:   32:[8Cs += v[5];[39;9H-:   33:      }[40;9H-:   34:      else {
    #####:   35:[8Cs += v[1];[42;9H-:   36:      }[43;9H-:   37:    }[44;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[47;9H-:   41:      }[48;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[50;9H-:   44:      }[51;9H-:   45:    }[52;9H-:   46:  }
    #####:   47:  return s;[54;9H-:   48:}[55;9H-:   49:[56;9H-:   50:int[57;9H5:   51:main()[58;9H-:   52:{[59;9H-:   53:  int a, b, c;[60;9H5:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {
    #####:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[62;9H-:   56:  }[63;9H5:   57:  return 0;[64;9H-:   58:}
[1m[34m~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H35,1[10CAll"coverage.c.gcov" 64L, 2012C[35;1H[?25h[?25l[?25h[?25l[?25h[?25l[71;107H~@k[35;1H[71;107H   [34;1H[71;118H4[34;1H[?25h[?25l[71;107H:[34;1H[71;1H[K[71;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"coverage.c.gcov" 64L, 2012C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ ./coverage
250 200 1000    50
compute(250, 200, 50) = 1549
rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ ./coveragevim coverage.c.gcov [2Pgcov coverage.gcda
coverage.c:source file is newer than notes file 'coverage.gcno'
(the message is displayed only once per source file)
File 'coverage.c'
Lines executed:50.00% of 24
Creating 'coverage.c.gcov'

rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ gcov coverage.gcda[8P./coveragevim coverage.c.gcov 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;71r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[71;1H"coverage.c.gcov" 64L, 2012C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:6[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:[13;9H1:    7:static int compute(int a, int b, int c) {[14;9H1:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001[15;9H1:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333[16;9H2:   10:    if (b < v[2]) {[13C// b < 319[17;9H1:   11:      s += v[2];[16C// s[0] += 319[18;9H1:   12:      if (c < v[3]) {[11C//c < 411[19;9H1:   13:[8Cs += v[4];[14C// s[0] += 911[20;9H-:   14:      }[21;9H-:   15:      else {
    #####:   16:[8Cs += v[3];[23;9H-:   17:      }[24;9H-:   18:    }[25;9H-:   19:    else {
    #####:   20:      s += v[1];
    #####:   21:      if (c < v[1]) {
    #####:   22:[8Cs += v[4];[29;9H-:   23:      }[30;9H-:   24:      else {
    #####:   25:[8Cs += v[2];[32;9H-:   26:      }[33;9H-:   27:    }[34;9H-:   28:  }[35;9H-:   29:  else {
    #####:   30:    if (b < v[3]) {
    #####:   31:      if (c < v[4]) {
    #####:   32:[8Cs += v[5];[39;9H-:   33:      }[40;9H-:   34:      else {
    #####:   35:[8Cs += v[1];[42;9H-:   36:      }[43;9H-:   37:    }[44;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[47;9H-:   41:      }[48;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[50;9H-:   44:      }[51;9H-:   45:    }[52;9H-:   46:  }[53;9H1:   47:  return s;[54;9H-:   48:}[55;9H-:   49:[56;9H-:   50:int[57;9H6:   51:main()[58;9H-:   52:{[59;9H-:   53:  int a, b, c;[60;9H7:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {[61;9H1:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[62;9H-:   56:  }[63;9H6:   57:  return 0;[64;9H-:   58:}
[1m[34m~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H34,1[10CAll[34;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:6[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:[13;9H1:    7:static int compute(int a, int b, int c) {[14;9H1:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001[15;9H1:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333[16;9H2:   10:    if (b < v[2]) {[13C// b < 319[17;9H1:   11:      s += v[2];[16C// s[0] += 319[18;9H1:   12:      if (c < v[3]) {[11C//c < 411[19;9H1:   13:[8Cs += v[4];[14C// s[0] += 911[20;9H-:   14:      }[21;9H-:   15:      else {
    #####:   16:[8Cs += v[3];[23;9H-:   17:      }[24;9H-:   18:    }[25;9H-:   19:    else {
    #####:   20:      s += v[1];
    #####:   21:      if (c < v[1]) {
    #####:   22:[8Cs += v[4];[29;9H-:   23:      }[30;9H-:   24:      else {
    #####:   25:[8Cs += v[2];[32;9H-:   26:      }[33;9H-:   27:    }[34;9H-:   28:  }[35;9H-:   29:  else {
    #####:   30:    if (b < v[3]) {
    #####:   31:      if (c < v[4]) {
    #####:   32:[8Cs += v[5];[39;9H-:   33:      }[40;9H-:   34:      else {
    #####:   35:[8Cs += v[1];[42;9H-:   36:      }[43;9H-:   37:    }[44;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[47;9H-:   41:      }[48;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[50;9H-:   44:      }[51;9H-:   45:    }[52;9H-:   46:  }[53;9H1:   47:  return s;[54;9H-:   48:}[55;9H-:   49:[56;9H-:   50:int[57;9H6:   51:main()[58;9H-:   52:{[59;9H-:   53:  int a, b, c;[60;9H7:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {[61;9H1:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[62;9H-:   56:  }[63;9H6:   57:  return 0;[64;9H-:   58:}
[1m[34m~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H34,1[10CAll"coverage.c.gcov" 64L, 2012C[34;1H[?25h[?25l[71;107H:[34;1H[71;1H[K[71;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"coverage.c.gcov" 64L, 2012C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ vim coverage.c.gcov [2Pgcov coverage.gcda[8P./coveragevim coverage.c.gcov [10P./coverage
^[[A^[[A^[[B            250 500     200 1000
compute(250, 200, 1000) = 1049
rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ ./coveragevim coverage.c.gcov [2Pgcov coverage.gcda
coverage.c:source file is newer than notes file 'coverage.gcno'
(the message is displayed only once per source file)
File 'coverage.c'
Lines executed:54.17% of 24
Creating 'coverage.c.gcov'

rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ gcov coverage.gcda[8P./coveragevim coverage.c.gcov 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;71r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[71;1H"coverage.c.gcov" 64L, 2012C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:7[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:[13;9H2:    7:static int compute(int a, int b, int c) {[14;9H2:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001[15;9H2:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333[16;9H4:   10:    if (b < v[2]) {[13C// b < 319[17;9H2:   11:      s += v[2];[16C// s[0] += 319[18;9H2:   12:      if (c < v[3]) {[11C//c < 411[19;9H1:   13:[8Cs += v[4];[14C// s[0] += 911[20;9H-:   14:      }[21;9H-:   15:      else {[22;9H1:   16:[8Cs += v[3];[23;9H-:   17:      }[24;9H-:   18:    }[25;9H-:   19:    else {
    #####:   20:      s += v[1];
    #####:   21:      if (c < v[1]) {
    #####:   22:[8Cs += v[4];[29;9H-:   23:      }[30;9H-:   24:      else {
    #####:   25:[8Cs += v[2];[32;9H-:   26:      }[33;9H-:   27:    }[34;9H-:   28:  }[35;9H-:   29:  else {
    #####:   30:    if (b < v[3]) {
    #####:   31:      if (c < v[4]) {
    #####:   32:[8Cs += v[5];[39;9H-:   33:      }[40;9H-:   34:      else {
    #####:   35:[8Cs += v[1];[42;9H-:   36:      }[43;9H-:   37:    }[44;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[47;9H-:   41:      }[48;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[50;9H-:   44:      }[51;9H-:   45:    }[52;9H-:   46:  }[53;9H2:   47:  return s;[54;9H-:   48:}[55;9H-:   49:[56;9H-:   50:int[57;9H7:   51:main()[58;9H-:   52:{[59;9H-:   53:  int a, b, c;[60;9H9:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {[61;9H2:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[62;9H-:   56:  }[63;9H7:   57:  return 0;[64;9H-:   58:}
[1m[34m~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H34,1[10CAll[34;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:7[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:[13;9H2:    7:static int compute(int a, int b, int c) {[14;9H2:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001[15;9H2:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333[16;9H4:   10:    if (b < v[2]) {[13C// b < 319[17;9H2:   11:      s += v[2];[16C// s[0] += 319[18;9H2:   12:      if (c < v[3]) {[11C//c < 411[19;9H1:   13:[8Cs += v[4];[14C// s[0] += 911[20;9H-:   14:      }[21;9H-:   15:      else {[22;9H1:   16:[8Cs += v[3];[23;9H-:   17:      }[24;9H-:   18:    }[25;9H-:   19:    else {
    #####:   20:      s += v[1];
    #####:   21:      if (c < v[1]) {
    #####:   22:[8Cs += v[4];[29;9H-:   23:      }[30;9H-:   24:      else {
    #####:   25:[8Cs += v[2];[32;9H-:   26:      }[33;9H-:   27:    }[34;9H-:   28:  }[35;9H-:   29:  else {
    #####:   30:    if (b < v[3]) {
    #####:   31:      if (c < v[4]) {
    #####:   32:[8Cs += v[5];[39;9H-:   33:      }[40;9H-:   34:      else {
    #####:   35:[8Cs += v[1];[42;9H-:   36:      }[43;9H-:   37:    }[44;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[47;9H-:   41:      }[48;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[50;9H-:   44:      }[51;9H-:   45:    }[52;9H-:   46:  }[53;9H2:   47:  return s;[54;9H-:   48:}[55;9H-:   49:[56;9H-:   50:int[57;9H7:   51:main()[58;9H-:   52:{[59;9H-:   53:  int a, b, c;[60;9H9:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {[61;9H2:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[62;9H-:   56:  }[63;9H7:   57:  return 0;[64;9H-:   58:}
[1m[34m~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H34,1[10CAll"coverage.c.gcov" 64L, 2012C[34;1H[?25h[?25l[71;107H:[34;1H[71;1H[K[71;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"coverage.c.gcov" 64L, 2012C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ vim coverage.c.gcov [2Pgcov coverage.gcda[8P./coverage
150 1000^[[D^[[D^[[D^[[D                        250 1000 50
compute(250, 1000, 50) = 1563
rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ ./coveragevim coverage.c.gcov [2Pgcov coverage.gcda
coverage.c:source file is newer than notes file 'coverage.gcno'
(the message is displayed only once per source file)
File 'coverage.c'
Lines executed:66.67% of 24
Creating 'coverage.c.gcov'

rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ gcov coverage.gcda[8P./coveragevim coverage.c.gcov 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;71r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[71;1H"coverage.c.gcov" 64L, 2012C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:8[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:[13;9H3:    7:static int compute(int a, int b, int c) {[14;9H3:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001[15;9H3:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333[16;9H6:   10:    if (b < v[2]) {[13C// b < 319[17;9H2:   11:      s += v[2];[16C// s[0] += 319[18;9H2:   12:      if (c < v[3]) {[11C//c < 411[19;9H1:   13:[8Cs += v[4];[14C// s[0] += 911[20;9H-:   14:      }[21;9H-:   15:      else {[22;9H1:   16:[8Cs += v[3];[23;9H-:   17:      }[24;9H-:   18:    }[25;9H-:   19:    else {[26;9H1:   20:      s += v[1];[27;9H1:   21:      if (c < v[1]) {[28;9H1:   22:[8Cs += v[4];[29;9H-:   23:      }[30;9H-:   24:      else {
    #####:   25:[8Cs += v[2];[32;9H-:   26:      }[33;9H-:   27:    }[34;9H-:   28:  }[35;9H-:   29:  else {
    #####:   30:    if (b < v[3]) {
    #####:   31:      if (c < v[4]) {
    #####:   32:[8Cs += v[5];[39;9H-:   33:      }[40;9H-:   34:      else {
    #####:   35:[8Cs += v[1];[42;9H-:   36:      }[43;9H-:   37:    }[44;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[47;9H-:   41:      }[48;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[50;9H-:   44:      }[51;9H-:   45:    }[52;9H-:   46:  }[53;9H3:   47:  return s;[54;9H-:   48:}[55;9H-:   49:[56;9H-:   50:int[57;9H8:   51:main()[58;9H-:   52:{[59;9H-:   53:  int a, b, c;[60;8H11:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {[61;9H3:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[62;9H-:   56:  }[63;9H8:   57:  return 0;[64;9H-:   58:}
[1m[34m~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H34,1[10CAll[34;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:8[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:[13;9H3:    7:static int compute(int a, int b, int c) {[14;9H3:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001[15;9H3:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333[16;9H6:   10:    if (b < v[2]) {[13C// b < 319[17;9H2:   11:      s += v[2];[16C// s[0] += 319[18;9H2:   12:      if (c < v[3]) {[11C//c < 411[19;9H1:   13:[8Cs += v[4];[14C// s[0] += 911[20;9H-:   14:      }[21;9H-:   15:      else {[22;9H1:   16:[8Cs += v[3];[23;9H-:   17:      }[24;9H-:   18:    }[25;9H-:   19:    else {[26;9H1:   20:      s += v[1];[27;9H1:   21:      if (c < v[1]) {[28;9H1:   22:[8Cs += v[4];[29;9H-:   23:      }[30;9H-:   24:      else {
    #####:   25:[8Cs += v[2];[32;9H-:   26:      }[33;9H-:   27:    }[34;9H-:   28:  }[35;9H-:   29:  else {
    #####:   30:    if (b < v[3]) {
    #####:   31:      if (c < v[4]) {
    #####:   32:[8Cs += v[5];[39;9H-:   33:      }[40;9H-:   34:      else {
    #####:   35:[8Cs += v[1];[42;9H-:   36:      }[43;9H-:   37:    }[44;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[47;9H-:   41:      }[48;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[50;9H-:   44:      }[51;9H-:   45:    }[52;9H-:   46:  }[53;9H3:   47:  return s;[54;9H-:   48:}[55;9H-:   49:[56;9H-:   50:int[57;9H8:   51:main()[58;9H-:   52:{[59;9H-:   53:  int a, b, c;[60;8H11:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {[61;9H3:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[62;9H-:   56:  }[63;9H8:   57:  return 0;[64;9H-:   58:}
[1m[34m~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H34,1[10CAll"coverage.c.gcov" 64L, 2012C[34;1H[?25h[?25l[71;107H:[34;1H[71;1H[K[71;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"coverage.c.gcov" 64L, 2012C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ vim coverage.c.gcov [2Pgcov coverage.gcda[8P./coverage
250 1000 1000
compute(250, 1000, 1000) = 971
rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ ./coveragevim coverage.c.gcov [2Pgcov coverage.gcda
coverage.c:source file is newer than notes file 'coverage.gcno'
(the message is displayed only once per source file)
File 'coverage.c'
Lines executed:70.83% of 24
Creating 'coverage.c.gcov'

rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ gcov coverage.gcda[8P./coveragevim coverage.c.gcov 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;71r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[71;1H"coverage.c.gcov" 64L, 2012C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:9[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:[13;9H4:    7:static int compute(int a, int b, int c) {[14;9H4:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001[15;9H4:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333[16;9H8:   10:    if (b < v[2]) {[13C// b < 319[17;9H2:   11:      s += v[2];[16C// s[0] += 319[18;9H2:   12:      if (c < v[3]) {[11C//c < 411[19;9H1:   13:[8Cs += v[4];[14C// s[0] += 911[20;9H-:   14:      }[21;9H-:   15:      else {[22;9H1:   16:[8Cs += v[3];[23;9H-:   17:      }[24;9H-:   18:    }[25;9H-:   19:    else {[26;9H2:   20:      s += v[1];[27;9H2:   21:      if (c < v[1]) {[28;9H1:   22:[8Cs += v[4];[29;9H-:   23:      }[30;9H-:   24:      else {[31;9H1:   25:[8Cs += v[2];[32;9H-:   26:      }[33;9H-:   27:    }[34;9H-:   28:  }[35;9H-:   29:  else {
    #####:   30:    if (b < v[3]) {
    #####:   31:      if (c < v[4]) {
    #####:   32:[8Cs += v[5];[39;9H-:   33:      }[40;9H-:   34:      else {
    #####:   35:[8Cs += v[1];[42;9H-:   36:      }[43;9H-:   37:    }[44;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[47;9H-:   41:      }[48;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[50;9H-:   44:      }[51;9H-:   45:    }[52;9H-:   46:  }[53;9H4:   47:  return s;[54;9H-:   48:}[55;9H-:   49:[56;9H-:   50:int[57;9H9:   51:main()[58;9H-:   52:{[59;9H-:   53:  int a, b, c;[60;8H13:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {[61;9H4:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[62;9H-:   56:  }[63;9H9:   57:  return 0;[64;9H-:   58:}
[1m[34m~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H34,1[10CAll[34;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:9[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:[13;9H4:    7:static int compute(int a, int b, int c) {[14;9H4:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001[15;9H4:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333[16;9H8:   10:    if (b < v[2]) {[13C// b < 319[17;9H2:   11:      s += v[2];[16C// s[0] += 319[18;9H2:   12:      if (c < v[3]) {[11C//c < 411[19;9H1:   13:[8Cs += v[4];[14C// s[0] += 911[20;9H-:   14:      }[21;9H-:   15:      else {[22;9H1:   16:[8Cs += v[3];[23;9H-:   17:      }[24;9H-:   18:    }[25;9H-:   19:    else {[26;9H2:   20:      s += v[1];[27;9H2:   21:      if (c < v[1]) {[28;9H1:   22:[8Cs += v[4];[29;9H-:   23:      }[30;9H-:   24:      else {[31;9H1:   25:[8Cs += v[2];[32;9H-:   26:      }[33;9H-:   27:    }[34;9H-:   28:  }[35;9H-:   29:  else {
    #####:   30:    if (b < v[3]) {
    #####:   31:      if (c < v[4]) {
    #####:   32:[8Cs += v[5];[39;9H-:   33:      }[40;9H-:   34:      else {
    #####:   35:[8Cs += v[1];[42;9H-:   36:      }[43;9H-:   37:    }[44;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[47;9H-:   41:      }[48;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[50;9H-:   44:      }[51;9H-:   45:    }[52;9H-:   46:  }[53;9H4:   47:  return s;[54;9H-:   48:}[55;9H-:   49:[56;9H-:   50:int[57;9H9:   51:main()[58;9H-:   52:{[59;9H-:   53:  int a, b, c;[60;8H13:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {[61;9H4:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[62;9H-:   56:  }[63;9H9:   57:  return 0;[64;9H-:   58:}
[1m[34m~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H34,1[10CAll"coverage.c.gcov" 64L, 2012C[34;1H[?25h[?25l[71;107H:[34;1H[71;1H[K[71;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"coverage.c.gcov" 64L, 2012C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ vim coverage.c.gcov [2Pgcov coverage.gcda[8P./coveragevim coverage.c.gcov [10P./coverage
1000 250 50
compute(1000, 250, 50) = 1320
^[[A    rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ ./coveragevim coverage.c.gcov [2Pgcov coverage.gcda
coverage.c:source file is newer than notes file 'coverage.gcno'
(the message is displayed only once per source file)
File 'coverage.c'
Lines executed:83.33% of 24
Creating 'coverage.c.gcov'

rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ gcov coverage.gcda[8P./coveragevim coverage.c.gcov [2Pgcov coverage.gcda[8P./coveragegcov coverage.gcdavim coverage.c.gcov 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;71r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[71;1H"coverage.c.gcov" 64L, 2013C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:10[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:[13;9H5:    7:static int compute(int a, int b, int c) {[14;9H5:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001[15;9H5:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333[16;9H8:   10:    if (b < v[2]) {[13C// b < 319[17;9H2:   11:      s += v[2];[16C// s[0] += 319[18;9H2:   12:      if (c < v[3]) {[11C//c < 411[19;9H1:   13:[8Cs += v[4];[14C// s[0] += 911[20;9H-:   14:      }[21;9H-:   15:      else {[22;9H1:   16:[8Cs += v[3];[23;9H-:   17:      }[24;9H-:   18:    }[25;9H-:   19:    else {[26;9H2:   20:      s += v[1];[27;9H2:   21:      if (c < v[1]) {[28;9H1:   22:[8Cs += v[4];[29;9H-:   23:      }[30;9H-:   24:      else {[31;9H1:   25:[8Cs += v[2];[32;9H-:   26:      }[33;9H-:   27:    }[34;9H-:   28:  }[35;9H-:   29:  else {[36;9H1:   30:    if (b < v[3]) {[37;9H1:   31:      if (c < v[4]) {[38;9H1:   32:[8Cs += v[5];[39;9H-:   33:      }[40;9H-:   34:      else {
    #####:   35:[8Cs += v[1];[42;9H-:   36:      }[43;9H-:   37:    }[44;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[47;9H-:   41:      }[48;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[50;9H-:   44:      }[51;9H-:   45:    }[52;9H-:   46:  }[53;9H5:   47:  return s;[54;9H-:   48:}[55;9H-:   49:[56;9H-:   50:int[57;8H10:   51:main()[58;9H-:   52:{[59;9H-:   53:  int a, b, c;[60;8H15:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {[61;9H5:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[62;9H-:   56:  }[63;8H10:   57:  return 0;[64;9H-:   58:}
[1m[34m~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H34,1[10CAll[34;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:10[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:[13;9H5:    7:static int compute(int a, int b, int c) {[14;9H5:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001[15;9H5:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333[16;9H8:   10:    if (b < v[2]) {[13C// b < 319[17;9H2:   11:      s += v[2];[16C// s[0] += 319[18;9H2:   12:      if (c < v[3]) {[11C//c < 411[19;9H1:   13:[8Cs += v[4];[14C// s[0] += 911[20;9H-:   14:      }[21;9H-:   15:      else {[22;9H1:   16:[8Cs += v[3];[23;9H-:   17:      }[24;9H-:   18:    }[25;9H-:   19:    else {[26;9H2:   20:      s += v[1];[27;9H2:   21:      if (c < v[1]) {[28;9H1:   22:[8Cs += v[4];[29;9H-:   23:      }[30;9H-:   24:      else {[31;9H1:   25:[8Cs += v[2];[32;9H-:   26:      }[33;9H-:   27:    }[34;9H-:   28:  }[35;9H-:   29:  else {[36;9H1:   30:    if (b < v[3]) {[37;9H1:   31:      if (c < v[4]) {[38;9H1:   32:[8Cs += v[5];[39;9H-:   33:      }[40;9H-:   34:      else {
    #####:   35:[8Cs += v[1];[42;9H-:   36:      }[43;9H-:   37:    }[44;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[47;9H-:   41:      }[48;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[50;9H-:   44:      }[51;9H-:   45:    }[52;9H-:   46:  }[53;9H5:   47:  return s;[54;9H-:   48:}[55;9H-:   49:[56;9H-:   50:int[57;8H10:   51:main()[58;9H-:   52:{[59;9H-:   53:  int a, b, c;[60;8H15:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {[61;9H5:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[62;9H-:   56:  }[63;8H10:   57:  return 0;[64;9H-:   58:}
[1m[34m~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H34,1[10CAll"coverage.c.gcov" 64L, 2013C[34;1H[?25h[?25l[71;107H:[34;1H[71;1H[K[71;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"coverage.c.gcov" 64L, 2013C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ vim coverage.c.gcov [Krm -f [14@vim coverage.c.gcov[C[2Pgcov coverage.gcdavim coverage.c.gcov rm -f [Kcoverage.c.gcov 
rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ rm -f coverage.c.gcov [2Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2Pgcov coverage.gcda
coverage.c:source file is newer than notes file 'coverage.gcno'
(the message is displayed only once per source file)
File 'coverage.c'
Lines executed:83.33% of 24
Creating 'coverage.c.gcov'

rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ gcov coverage.gcdarm -f coverage.c.gcov [2Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2@rm -f[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;71r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[71;1H"coverage.c.gcov" 64L, 2013C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:10[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:[13;9H5:    7:static int compute(int a, int b, int c) {[14;9H5:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001[15;9H5:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333[16;9H8:   10:    if (b < v[2]) {[13C// b < 319[17;9H2:   11:      s += v[2];[16C// s[0] += 319[18;9H2:   12:      if (c < v[3]) {[11C//c < 411[19;9H1:   13:[8Cs += v[4];[14C// s[0] += 911[20;9H-:   14:      }[21;9H-:   15:      else {[22;9H1:   16:[8Cs += v[3];[23;9H-:   17:      }[24;9H-:   18:    }[25;9H-:   19:    else {[26;9H2:   20:      s += v[1];[27;9H2:   21:      if (c < v[1]) {[28;9H1:   22:[8Cs += v[4];[29;9H-:   23:      }[30;9H-:   24:      else {[31;9H1:   25:[8Cs += v[2];[32;9H-:   26:      }[33;9H-:   27:    }[34;9H-:   28:  }[35;9H-:   29:  else {[36;9H1:   30:    if (b < v[3]) {[37;9H1:   31:      if (c < v[4]) {[38;9H1:   32:[8Cs += v[5];[39;9H-:   33:      }[40;9H-:   34:      else {
    #####:   35:[8Cs += v[1];[42;9H-:   36:      }[43;9H-:   37:    }[44;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[47;9H-:   41:      }[48;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[50;9H-:   44:      }[51;9H-:   45:    }[52;9H-:   46:  }[53;9H5:   47:  return s;[54;9H-:   48:}[55;9H-:   49:[56;9H-:   50:int[57;8H10:   51:main()[58;9H-:   52:{[59;9H-:   53:  int a, b, c;[60;8H15:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {[61;9H5:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[62;9H-:   56:  }[63;8H10:   57:  return 0;[64;9H-:   58:}
[1m[34m~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H34,1[10CAll[34;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:10[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:[13;9H5:    7:static int compute(int a, int b, int c) {[14;9H5:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001[15;9H5:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333[16;9H8:   10:    if (b < v[2]) {[13C// b < 319[17;9H2:   11:      s += v[2];[16C// s[0] += 319[18;9H2:   12:      if (c < v[3]) {[11C//c < 411[19;9H1:   13:[8Cs += v[4];[14C// s[0] += 911[20;9H-:   14:      }[21;9H-:   15:      else {[22;9H1:   16:[8Cs += v[3];[23;9H-:   17:      }[24;9H-:   18:    }[25;9H-:   19:    else {[26;9H2:   20:      s += v[1];[27;9H2:   21:      if (c < v[1]) {[28;9H1:   22:[8Cs += v[4];[29;9H-:   23:      }[30;9H-:   24:      else {[31;9H1:   25:[8Cs += v[2];[32;9H-:   26:      }[33;9H-:   27:    }[34;9H-:   28:  }[35;9H-:   29:  else {[36;9H1:   30:    if (b < v[3]) {[37;9H1:   31:      if (c < v[4]) {[38;9H1:   32:[8Cs += v[5];[39;9H-:   33:      }[40;9H-:   34:      else {
    #####:   35:[8Cs += v[1];[42;9H-:   36:      }[43;9H-:   37:    }[44;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[47;9H-:   41:      }[48;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[50;9H-:   44:      }[51;9H-:   45:    }[52;9H-:   46:  }[53;9H5:   47:  return s;[54;9H-:   48:}[55;9H-:   49:[56;9H-:   50:int[57;8H10:   51:main()[58;9H-:   52:{[59;9H-:   53:  int a, b, c;[60;8H15:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {[61;9H5:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[62;9H-:   56:  }[63;8H10:   57:  return 0;[64;9H-:   58:}
[1m[34m~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H34,1[10CAll"coverage.c.gcov" 64L, 2013C[34;1H[?25h[?25l[71;107H:[34;1H[71;1H[K[71;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"coverage.c.gcov" 64L, 2013C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ vim coverage.c.gcov [2Pgcov coverage.gcdarm -f coverage.c.gcov [K[K[Kda[K[K[K[K[K[Kgcda [K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kls -l
total 52
-rwxr-x--- 1 rgeary1 rgeary1 30784 Nov 12 13:25 coverage
-rw-r----- 1 rgeary1 rgeary1   886 Nov 12 13:32 coverage.c
-rw-r----- 1 rgeary1 rgeary1  2013 Nov 12 13:42 coverage.c.gcov
-rw-r----- 1 rgeary1 rgeary1   380 Nov 12 13:41 coverage.gcda
-rw-r----- 1 rgeary1 rgeary1  1984 Nov 12 13:25 coverage.gcno
-rw-r----- 1 rgeary1 rgeary1   164 Nov 12 13:26 Makefile
rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ ls -lvim coverage.c.gcov [2Pgcov coverage.gcdarm -f coverage.c.gcov [2Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2Pgcov coverage.gcda[8P./coverage
1000 25 1000^[[D^[[D^[[D                 0 1000 10   
compute(1000, 250, 1000) = 652
rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ ./coverage[5Pls -lvim coverage.c.gcov [2Pgcov coverage.gcda
coverage.c:source file is newer than notes file 'coverage.gcno'
(the message is displayed only once per source file)
File 'coverage.c'
Lines executed:87.50% of 24
Creating 'coverage.c.gcov'

rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ gcov coverage.gcda[8P./coverage[5Pls -lvim coverage.c.gcov 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;71r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[71;1H"coverage.c.gcov" 64L, 2013C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:11[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:[13;9H6:    7:static int compute(int a, int b, int c) {[14;9H6:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001[15;9H6:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333[16;9H8:   10:    if (b < v[2]) {[13C// b < 319[17;9H2:   11:      s += v[2];[16C// s[0] += 319[18;9H2:   12:      if (c < v[3]) {[11C//c < 411[19;9H1:   13:[8Cs += v[4];[14C// s[0] += 911[20;9H-:   14:      }[21;9H-:   15:      else {[22;9H1:   16:[8Cs += v[3];[23;9H-:   17:      }[24;9H-:   18:    }[25;9H-:   19:    else {[26;9H2:   20:      s += v[1];[27;9H2:   21:      if (c < v[1]) {[28;9H1:   22:[8Cs += v[4];[29;9H-:   23:      }[30;9H-:   24:      else {[31;9H1:   25:[8Cs += v[2];[32;9H-:   26:      }[33;9H-:   27:    }[34;9H-:   28:  }[35;9H-:   29:  else {[36;9H2:   30:    if (b < v[3]) {[37;9H2:   31:      if (c < v[4]) {[38;9H1:   32:[8Cs += v[5];[39;9H-:   33:      }[40;9H-:   34:      else {[41;9H1:   35:[8Cs += v[1];[42;9H-:   36:      }[43;9H-:   37:    }[44;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[47;9H-:   41:      }[48;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[50;9H-:   44:      }[51;9H-:   45:    }[52;9H-:   46:  }[53;9H6:   47:  return s;[54;9H-:   48:}[55;9H-:   49:[56;9H-:   50:int[57;8H11:   51:main()[58;9H-:   52:{[59;9H-:   53:  int a, b, c;[60;8H17:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {[61;9H6:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[62;9H-:   56:  }[63;8H11:   57:  return 0;[64;9H-:   58:}
[1m[34m~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H34,1[10CAll[34;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:11[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:[13;9H6:    7:static int compute(int a, int b, int c) {[14;9H6:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001[15;9H6:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333[16;9H8:   10:    if (b < v[2]) {[13C// b < 319[17;9H2:   11:      s += v[2];[16C// s[0] += 319[18;9H2:   12:      if (c < v[3]) {[11C//c < 411[19;9H1:   13:[8Cs += v[4];[14C// s[0] += 911[20;9H-:   14:      }[21;9H-:   15:      else {[22;9H1:   16:[8Cs += v[3];[23;9H-:   17:      }[24;9H-:   18:    }[25;9H-:   19:    else {[26;9H2:   20:      s += v[1];[27;9H2:   21:      if (c < v[1]) {[28;9H1:   22:[8Cs += v[4];[29;9H-:   23:      }[30;9H-:   24:      else {[31;9H1:   25:[8Cs += v[2];[32;9H-:   26:      }[33;9H-:   27:    }[34;9H-:   28:  }[35;9H-:   29:  else {[36;9H2:   30:    if (b < v[3]) {[37;9H2:   31:      if (c < v[4]) {[38;9H1:   32:[8Cs += v[5];[39;9H-:   33:      }[40;9H-:   34:      else {[41;9H1:   35:[8Cs += v[1];[42;9H-:   36:      }[43;9H-:   37:    }[44;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[47;9H-:   41:      }[48;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[50;9H-:   44:      }[51;9H-:   45:    }[52;9H-:   46:  }[53;9H6:   47:  return s;[54;9H-:   48:}[55;9H-:   49:[56;9H-:   50:int[57;8H11:   51:main()[58;9H-:   52:{[59;9H-:   53:  int a, b, c;[60;8H17:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {[61;9H6:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[62;9H-:   56:  }[63;8H11:   57:  return 0;[64;9H-:   58:}
[1m[34m~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H34,1[10CAll"coverage.c.gcov" 64L, 2013C[34;1H[?25h[?25l[71;107H:[34;1H[71;1H[K[71;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"coverage.c.gcov" 64L, 2013C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ vim coverage.c.gcov [2Pgcov coverage.gcda[8P./coverage
1000 1000 50
compute(1000, 1000, 50) = 652
1000 1000 1000
compute(1000, 1000, 1000) = 730
rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ ./coveragevim coverage.c.gcov [2Pgcov coverage.gcda
coverage.c:source file is newer than notes file 'coverage.gcno'
(the message is displayed only once per source file)
File 'coverage.c'
Lines executed:100.00% of 24
Creating 'coverage.c.gcov'

rgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ gcov coverage.gcda[8P./coveragevim coverage.c.gcov 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;71r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[71;1H"coverage.c.gcov" 64L, 2013C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:12[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:[13;9H8:    7:static int compute(int a, int b, int c) {[14;9H8:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001[15;9H8:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333[16;9H8:   10:    if (b < v[2]) {[13C// b < 319[17;9H2:   11:      s += v[2];[16C// s[0] += 319[18;9H2:   12:      if (c < v[3]) {[11C//c < 411[19;9H1:   13:[8Cs += v[4];[14C// s[0] += 911[20;9H-:   14:      }[21;9H-:   15:      else {[22;9H1:   16:[8Cs += v[3];[23;9H-:   17:      }[24;9H-:   18:    }[25;9H-:   19:    else {[26;9H2:   20:      s += v[1];[27;9H2:   21:      if (c < v[1]) {[28;9H1:   22:[8Cs += v[4];[29;9H-:   23:      }[30;9H-:   24:      else {[31;9H1:   25:[8Cs += v[2];[32;9H-:   26:      }[33;9H-:   27:    }[34;9H-:   28:  }[35;9H-:   29:  else {[36;9H4:   30:    if (b < v[3]) {[37;9H2:   31:      if (c < v[4]) {[38;9H1:   32:[8Cs += v[5];[39;9H-:   33:      }[40;9H-:   34:      else {[41;9H1:   35:[8Cs += v[1];[42;9H-:   36:      }[43;9H-:   37:    }[44;9H-:   38:    else {[45;9H2:   39:      if (c < v[2]) {[46;9H1:   40:[8Cs += v[1];[47;9H-:   41:      }[48;9H-:   42:      else {[49;9H1:   43:[8Cs += v[3];[50;9H-:   44:      }[51;9H-:   45:    }[52;9H-:   46:  }[53;9H8:   47:  return s;[54;9H-:   48:}[55;9H-:   49:[56;9H-:   50:int[57;8H12:   51:main()[58;9H-:   52:{[59;9H-:   53:  int a, b, c;[60;8H20:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {[61;9H8:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[62;9H-:   56:  }[63;8H12:   57:  return 0;[64;9H-:   58:}
[1m[34m~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H34,1[10CAll[34;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:12[5;9H-:    0:Programs:1[6;9H-:    0:Source is newer than graph[7;9H-:    1:#include <stdio.h>[8;9H-:    2:[9;9H-:    3:static int v[] = {[10;9H-:    4:  211,  333, 319, 411, 911, 1001,[11;9H-:    5:};[12;9H-:    6:[13;9H8:    7:static int compute(int a, int b, int c) {[14;9H8:    8:  int s = v[2];[17C//s = v[2] = 319,411,911,1001[15;9H8:    9:  if (v[0] < a && a < v[1]) {   //211 < a < 333[16;9H8:   10:    if (b < v[2]) {[13C// b < 319[17;9H2:   11:      s += v[2];[16C// s[0] += 319[18;9H2:   12:      if (c < v[3]) {[11C//c < 411[19;9H1:   13:[8Cs += v[4];[14C// s[0] += 911[20;9H-:   14:      }[21;9H-:   15:      else {[22;9H1:   16:[8Cs += v[3];[23;9H-:   17:      }[24;9H-:   18:    }[25;9H-:   19:    else {[26;9H2:   20:      s += v[1];[27;9H2:   21:      if (c < v[1]) {[28;9H1:   22:[8Cs += v[4];[29;9H-:   23:      }[30;9H-:   24:      else {[31;9H1:   25:[8Cs += v[2];[32;9H-:   26:      }[33;9H-:   27:    }[34;9H-:   28:  }[35;9H-:   29:  else {[36;9H4:   30:    if (b < v[3]) {[37;9H2:   31:      if (c < v[4]) {[38;9H1:   32:[8Cs += v[5];[39;9H-:   33:      }[40;9H-:   34:      else {[41;9H1:   35:[8Cs += v[1];[42;9H-:   36:      }[43;9H-:   37:    }[44;9H-:   38:    else {[45;9H2:   39:      if (c < v[2]) {[46;9H1:   40:[8Cs += v[1];[47;9H-:   41:      }[48;9H-:   42:      else {[49;9H1:   43:[8Cs += v[3];[50;9H-:   44:      }[51;9H-:   45:    }[52;9H-:   46:  }[53;9H8:   47:  return s;[54;9H-:   48:}[55;9H-:   49:[56;9H-:   50:int[57;8H12:   51:main()[58;9H-:   52:{[59;9H-:   53:  int a, b, c;[60;8H20:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {[61;9H8:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));[62;9H-:   56:  }[63;8H12:   57:  return 0;[64;9H-:   58:}
[1m[34m~                                                                                                                                     [66;1H~                                                                                                                                     [67;1H~                                                                                                                                     [68;1H~                                                                                                                                     [69;1H~                                                                                                                                     [70;1H~                                                                                                                                     [m[71;117H34,1[10CAll"coverage.c.gcov" 64L, 2013C[34;1H[?25h[?25l[71;107H:[34;1H[71;1H[K[71;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"coverage.c.gcov" 64L, 2013C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote01:~/i220a/submit/lab11/exercises/coverage$ git[K[K[Kcd ..
rgeary1@remote01:~/i220a/submit/lab11/exercises$ giot[K[Kt add -a
error: unknown switch `a'
usage: git add [<options>] [--] <pathspec>...

    -n, --dry-run         dry run
    -v, --verbose         be verbose

    -i, --interactive     interactive picking
    -p, --patch           select hunks interactively
    -e, --edit            edit current diff and apply
    -f, --force           allow adding otherwise ignored files
    -u, --update          update tracked files
    --renormalize         renormalize EOL of tracked files (implies -u)
    -N, --intent-to-add   record only the fact that the path will be added later
    -A, --all             add changes from all tracked and untracked files
    --ignore-removal      ignore paths removed in the working tree (same as --no-all)
    --refresh             don't add, only refresh the index
    --ignore-errors       just skip files which cannot be added because of errors
    --ignore-missing      check if - even missing - files are ignored in dry run
    --chmod (+|-)x        override the executable bit of the listed files
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character

rgeary1@remote01:~/i220a/submit/lab11/exercises$ git add -a[K[K.
rgeary1@remote01:~/i220a/submit/lab11/exercises$ git commit -m 'completing lab11'
[lab11 c80c6ad] completing lab11
 Committer: Ryan Geary <rgeary1@cs.binghamton.edu>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 5 files changed, 1082 insertions(+), 6 deletions(-)
 create mode 100644 submit/lab11/exercises/coverage/coverage.c.gcov
 create mode 100644 submit/lab11/exercises/seq.seq
rgeary1@remote01:~/i220a/submit/lab11/exercises$ git push -u origin lab11
Enumerating objects: 23, done.
Counting objects:   4% (1/23)Counting objects:   8% (2/23)Counting objects:  13% (3/23)Counting objects:  17% (4/23)Counting objects:  21% (5/23)Counting objects:  26% (6/23)Counting objects:  30% (7/23)Counting objects:  34% (8/23)Counting objects:  39% (9/23)Counting objects:  43% (10/23)Counting objects:  47% (11/23)Counting objects:  52% (12/23)Counting objects:  56% (13/23)Counting objects:  60% (14/23)Counting objects:  65% (15/23)Counting objects:  69% (16/23)Counting objects:  73% (17/23)Counting objects:  78% (18/23)Counting objects:  82% (19/23)Counting objects:  86% (20/23)Counting objects:  91% (21/23)Counting objects:  95% (22/23)Counting objects: 100% (23/23)Counting objects: 100% (23/23), done.
Delta compression using up to 8 threads
Compressing objects:   8% (1/12)Compressing objects:  16% (2/12)Compressing objects:  25% (3/12)Compressing objects:  33% (4/12)Compressing objects:  41% (5/12)Compressing objects:  50% (6/12)Compressing objects:  58% (7/12)Compressing objects:  66% (8/12)Compressing objects:  75% (9/12)Compressing objects:  83% (10/12)Compressing objects:  91% (11/12)Compressing objects: 100% (12/12)Compressing objects: 100% (12/12), done.
Writing objects:   7% (1/13)Writing objects:  15% (2/13)Writing objects:  23% (3/13)Writing objects:  30% (4/13)Writing objects:  38% (5/13)Writing objects:  46% (6/13)Writing objects:  53% (7/13)Writing objects:  61% (8/13)Writing objects:  69% (9/13)Writing objects:  76% (10/13)Writing objects:  84% (11/13)Writing objects:  92% (12/13)Writing objects: 100% (13/13)Writing objects: 100% (13/13), 3.54 KiB | 1.18 MiB/s, done.
Total 13 (delta 7), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas:   0% (0/7)[Kremote: Resolving deltas:  14% (1/7)[Kremote: Resolving deltas:  28% (2/7)[Kremote: Resolving deltas:  42% (3/7)[Kremote: Resolving deltas:  57% (4/7)[Kremote: Resolving deltas:  71% (5/7)[Kremote: Resolving deltas:  85% (6/7)[Kremote: Resolving deltas: 100% (7/7)[Kremote: Resolving deltas: 100% (7/7), completed with 7 local objects.[K
To github.com:rgeary087/i220a.git
   dbefbc4..c80c6ad  lab11 -> lab11
Branch 'lab11' set up to track remote branch 'lab11' from 'origin'.
rgeary1@remote01:~/i220a/submit/lab11/exercises$ git c[Kbranch -l
[?1h=  lab1[m[m
  lab10[m[m
* [32mlab11[m[m
  lab2[m[m
  lab3[m[m
  lab4[m[m
  lab5[m[m
  lab6[m[m
  lab7[m[m
  lab8[m[m
  lab9[m[m
  master[m[m
  prj1-sol[m[m
  prj2-sol[m[m
  prj3-sol[m[m
  prj4-sol[m[m
[K[?1l>rgeary1@remote01:~/i220a/submit/lab11/exercises$ git checkout master [K
Switched to branch 'master'
Your branch is up to date with 'origin/master'.
rgeary1@remote01:~/i220a/submit/lab11/exercises$ git pull
Already up to date.
rgeary1@remote01:~/i220a/submit/lab11/exercises$ git checkout lab11
Switched to branch 'lab11'
Your branch is up to date with 'origin/lab11'.
rgeary1@remote01:~/i220a/submit/lab11/exercises$ git merge -m 'merged master' master
Already up to date.
rgeary1@remote01:~/i220a/submit/lab11/exercises$ git status -=s[K[Ks
[31m??[m ../lab11.LOG
rgeary1@remote01:~/i220a/submit/lab11/exercises$ git add .
rgeary1@remote01:~/i220a/submit/lab11/exercises$ exit

Script done on 2020-11-12 13:51:26-05:00 [COMMAND_EXIT_CODE="0"]
